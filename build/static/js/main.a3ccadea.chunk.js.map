{"version":3,"sources":["components/detailTabs.js","components/ownerWorkflow.js","components/admin.js","components/searchbar.js","components/caseworkerWorkflow.js","components/chooseWorkflow.js","components/verify.js","App.js","serviceWorker.js","index.js"],"names":["DetailTabs","state","activeItem","deleteClicked","toggle","tab","e","setState","console","log","docUrl","undefined","this","props","imgSrc","url","shareRequests","approvedShareRequests","shareRequest","approved","push","documentType","shareWithAccountId","onClick","approveShareRequest","className","to","active","role","far","icon","size","tabId","src","style","width","verticalAlign","padding","display","marginLeft","marginRight","textAlign","backgroundColor","borderRadius","deleteDocument","color","Component","OwnerWorkflow","ownerAccount","documentTypes","modal","detailModal","uploadDisabled","currentUploadType","currentDetailType","uploadDocumentFinished","documentTypeToUrlMap","fileSelected","getAccountData","a","async","axios","get","urlBase","res","data","id","sqRes","getDocuments","uploadDocument","file","document","getElementById","files","formData","FormData","append","uploadForAccountName","uploadForAccountId","fetch","method","headers","authorization","localStorage","getItem","body","documentsRes","documents","i","length","documentUrl","date","moment","createdAt","humanReadable","format","docObject","window","type","filename","delete","loginAsOwner","loggedInAsOwner","account","email","password","post","loginRes","defaults","common","token","setItem","logout","location","href","name","toggleDetail","shareRequestId","_id","put","componentDidMount","mainContent","recordRows","documentName","toggleDetailOrUpload","sharedWith","class","marginTop","paddingRight","isOpen","centered","aria-describedby","htmlFor","disabled","documentDetailModal","height","data-w-id","paddingTop","fontWeight","paddingLeft","React","Admin","rolePerms","submitPermissionsClicked","disableSubmit","submitPermissions","rolePermissionTable","buildPermissionTable","rolePermRes","JSON","stringify","rolePermResDefault","checkBoxChanged","target","checked","checkBoxes","Object","keys","key","onChange","label","filled","welcomeMessage","AutosuggestHighlightMatch","require","AutosuggestHighlightParse","getSuggestions","value","ownerAccountsForSearch","escapedValue","trim","replace","regex","RegExp","filter","person","test","getSuggestionValue","suggestion","first","last","renderSuggestion","query","suggestionText","matches","parts","backgroundSize","backgroundImage","map","part","index","highlight","text","SearchBar","event","newValue","onSuggestionSelected","suggestionValue","suggestionIndex","sectionIndex","ownerSelectedFromDropdown","onSuggestionsFetchRequested","suggestions","onSuggestionsClearRequested","onComponentDidMount","mypassAccounts","inputProps","placeholder","CaseWorkerWorkflow","caseWorkerAccount","loggedInAsCaseWorker","ownerAccounts","selectedAccout","uploadModal","availableDocumentTypes","requestClickedForTypes","allDocumentTypes","notarizationTypes","currentNotirizationType","ownerSig","notaryInfo","pem","requestButtonClicked","uploadOnBehalfResponseVC","uploadOnBehalfResponseVP","toggleUploadModal","requestDocument","accountId","rcft","getAllAccounts","username","docTypes","owner","found","find","element","uploadAndNotarizeDocument","file2","values","json","jsonRes","vc","vp","loginAsCaseWorker","signatureChange","notaryInfoChange","pemInfoChange","notirizationTypeChange","documentTypeChange","selectedOwnerLeftView","selectedOwnerRightView","ownerImage","ownerAvailableDocumentTypes","requestButton","margin","selectDocumentTypes","x","y","loadingOrReady","uploadDetailModal","rows","ChooseWorkflow","history","providerConfig","registry","rpcUrl","Verify","error","resolver","verifiedVC","signerMatches","verifiedSigner","jwt","Resolver","getResolver","jwtChange","verifyJWTClicked","verifyCredential","message","signer","toLowerCase","includes","payload","sub","issuer","URL_BASE","App","path","render","routeProps","Boolean","hostname","match","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oWA8MeA,E,2MA/LbC,MAAQ,CACNC,WAAY,IACZC,eAAe,G,EAGjBC,OAAS,SAAAC,GAAG,OAAI,SAAAC,GACV,EAAKL,MAAMC,aAAeG,GAC5B,EAAKE,SAAS,CACZL,WAAYG,M,EAKlBF,cAAgB,WACdK,QAAQC,IAAI,kBACZ,EAAKF,SAAS,CAAEJ,eAAe,K,wEAGvB,IAAD,OACHO,EAAS,SACaC,IAAtBC,KAAKC,MAAMC,SACbJ,EAASE,KAAKC,MAAMC,OAAOC,KAG7B,IAAIC,EAAgB,GAChBC,EAAwB,GAPrB,uBASP,YAAyBL,KAAKC,MAAMG,cAApC,+CAAmD,CAAC,IAA3CE,EAA0C,QACjDV,QAAQC,IAAI,iBACZD,QAAQC,IAAIS,GACRA,EAAaC,SACfF,EAAsBG,KACpB,6BACE,oCAAUF,EAAaG,cACvB,0CAAgBH,EAAaI,oBAC7B,wCAAcJ,EAAaC,UAC3B,+BAIJH,EAAcI,KACZ,6BACE,oCAAUF,EAAaG,cACvB,0CAAgBH,EAAaI,oBAC7B,wCAAcJ,EAAaC,UAC3B,kBAAC,IAAD,CAAQI,QAASX,KAAKC,MAAMW,oBAAoBN,IAAhD,WAGA,gCA9BD,kFAoCP,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQO,UAAU,iBAChB,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,GAAG,IACHC,OAAkC,MAA1Bf,KAAKX,MAAMC,WACnBqB,QAASX,KAAKR,OAAO,KACrBwB,KAAK,OAJP,YASF,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEF,GAAG,IACHC,OAAkC,MAA1Bf,KAAKX,MAAMC,WACnBqB,QAASX,KAAKR,OAAO,KACrBwB,KAAK,OAJP,UASF,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEF,GAAG,IACHC,OAAkC,MAA1Bf,KAAKX,MAAMC,WACnBqB,QAASX,KAAKR,OAAO,KACrBwB,KAAK,OAJP,YASF,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEF,GAAG,IACHC,OAAkC,MAA1Bf,KAAKX,MAAMC,WACnBqB,QAASX,KAAKR,OAAO,KACrBwB,KAAK,OAEL,kBAAC,IAAD,CAASC,KAAG,EAACC,KAAK,YAAYC,KAAK,UAIzC,kBAAC,IAAD,CAAe7B,WAAYU,KAAKX,MAAMC,YACpC,kBAAC,IAAD,CAAY8B,MAAM,IAAIJ,KAAK,YACzB,yBACEK,IAAKvB,EACLwB,MAAO,CACLC,MAAO,QACPC,cAAe,SACfC,QAAS,OACTC,QAAS,QACTC,WAAY,OACZC,YAAa,WAInB,kBAAC,IAAD,CAAYR,MAAM,IAAIJ,KAAK,YACzB,6BACE,wBAAIM,MAAO,CAAEG,QAAS,OAAQI,UAAW,WAAzC,mBAGA,6BACCzB,EAED,wBAAIkB,MAAO,CAAEG,QAAS,OAAQI,UAAW,WAAzC,4BAGA,6BACCxB,IAGL,kBAAC,IAAD,CAAYe,MAAM,IAAIJ,KAAK,YACzB,6BACE,wBAAIM,MAAO,CAAEG,QAAS,OAAQI,UAAW,WAAzC,oCAKJ,kBAAC,IAAD,CAAYT,MAAM,IAAIJ,KAAK,YACzB,yBAAKM,MAAO,CAAEQ,gBAAiB,UAAWC,aAAc,UACxB,IAA7B/B,KAAKX,MAAME,cACV,6BACE,wBAAI+B,MAAO,CAAEG,QAAS,OAAQI,UAAW,WAAzC,0DAIA,yBACER,IAAKvB,EACLwB,MAAO,CACLC,MAAO,QACPC,cAAe,SACfC,QAAS,OACTC,QAAS,QACTC,WAAY,OACZC,YAAa,UAIjB,wBAAIN,MAAO,CAAEG,QAAS,OAAQI,UAAW,WAAzC,kEAIA,wBAAIP,MAAO,CAAEG,QAAS,OAAQI,UAAW,WAAzC,iBAGA,yBACEP,MAAO,CACLO,UAAW,SACXF,WAAY,OACZC,YAAa,SAGf,kBAAC,IAAD,CACEjB,QAAS,WACP,EAAKV,MAAM+B,iBACX,EAAKzC,iBAEP0C,MAAM,OALR,oBAYJ,wBAAIX,MAAO,CAAEG,QAAS,OAAQI,UAAW,WAAzC,iC,GArLSK,a,iBCygBVC,E,2MA/fb9C,MAAQ,CACN+C,aAAc,GACdC,cAAe,GACfC,OAAO,EACPC,aAAa,EACbC,gBAAgB,EAChBC,kBAAmB,GACnBC,kBAAmB,GACnBC,wBAAwB,EACxBC,qBAAsB,GACtBxC,cAAe,I,EAGjByC,aAAe,WACb,EAAKlD,SAAS,CAAE6C,gBAAgB,K,EAGlCM,eAAiB,4BAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACCE,IAAMC,IAAI,EAAKjD,MAAMkD,QAAU,yBADhC,cACXC,EADW,OAEfxD,QAAQC,IAAIuD,GACZ,EAAKzD,SAAS,CAAE0C,cAAee,EAAIC,KAAKhB,gBAHzB,WAAAU,EAAA,MAKGE,IAAMC,IACtB,EAAKjD,MAAMkD,QACT,gBACA,EAAK9D,MAAM+C,aAAakB,GACxB,oBATW,OAKXC,EALW,OAYf,EAAK5D,SAAS,CAAES,cAAemD,EAAMF,OAErC,EAAKG,eAdU,uC,EAiBjBC,eAAiB,4BAAAV,EAAAC,OAAA,mDACf,EAAKrD,SAAS,CAAEgD,wBAAwB,IAClCe,EAAOC,SAASC,eAAe,oBAAoBC,OACnDC,EAAW,IAAIC,UACZC,OAAO,MAAON,EAAK,IAC5BI,EAASE,OAAO,OAAQ,EAAK3E,MAAMoD,wBAGG1C,IAApC,EAAKV,MAAM4E,2BACuBlE,IAAlC,EAAKV,MAAM6E,mBATE,wBAWbJ,EAASE,OAAO,uBAAwB,EAAK3E,MAAM4E,sBACnDH,EAASE,OAAO,qBAAsB,EAAK3E,MAAM6E,oBAZpC,YAAAnB,EAAA,MAcGoB,MACd,EAAKlE,MAAMkD,QAAU,qCACrB,CACEiB,OAAQ,OACRC,QAAS,CACPC,cAAe,SAAWC,aAAaC,QAAQ,cAEjDC,KAAMX,KArBG,0DAAAf,EAAA,MAyBGoB,MAAM,EAAKlE,MAAMkD,QAAU,kBAAmB,CAC5DiB,OAAQ,OACRC,QAAS,CACPC,cAAe,SAAWC,aAAaC,QAAQ,cAEjDC,KAAMX,KA9BK,uBAmCf,EAAKN,eAnCU,uC,EAsCjBA,aAAe,0CAAAT,EAAAC,OAAA,kEAAAD,EAAA,MACYE,IAAMC,IAAI,EAAKjD,MAAMkD,QAAU,oBAD3C,OAOb,IANIuB,EADS,OAETC,EAAYD,EAAarB,KAAKsB,UAClC/E,QAAQC,IAAI,cACZD,QAAQC,IAAI8E,GACR/B,EAAuB,GAElBgC,EAAI,EAAGA,EAAID,EAAUE,OAAQD,IAChCE,EACF,EAAK7E,MAAMkD,QAAU,kBAAoBwB,EAAUC,GAAGzE,IACpD4E,EAAOC,IAAOL,EAAUC,GAAGK,WAC3BC,EAAgBH,EAAKI,OAAO,eAC5BC,EAAY,CACdH,UAAWC,EACX/E,IAAK2E,EAAc,IAAMO,OAAOd,aAAaC,QAAQ,cAEnDc,EAAOX,EAAUC,GAAGU,KACxB1C,EAAqB0C,GAAQF,EAG/B,EAAKzF,SAAS,CAAEiD,qBAAsBA,IApBzB,sC,EAuBfZ,eAAiB,0BAAAe,EAAAC,OAAA,uDACTuC,EAAW,EAAKlG,MAAMuD,qBAC1B,EAAKvD,MAAMqD,mBACXvC,IAHa,WAAA4C,EAAA,MAKUE,IAAMuC,OAAOD,IALvB,cAOf,EAAK/B,eAPU,sC,EAUjBiC,aAAe,8BAAA1C,EAAAC,OAAA,uDACb,EAAKrD,SAAS,CAAE+F,iBAAiB,IAC7BjB,EAAO,CACTkB,QAAS,CACPC,MAAO,kBACPC,SAAU,UALD,WAAA9C,EAAA,MASQE,IAAM6C,KACzB,EAAK7F,MAAMkD,QAAU,sBACrBsB,IAXW,OASTsB,EATS,OAcTJ,EAAUI,EAAS1C,KAAKsC,QAE5B1C,IAAM+C,SAAS3B,QAAQ4B,OAAvB,cAAiD,UAAYN,EAAQO,MACrE3B,aAAa4B,QAAQ,YAAaR,EAAQO,OAC1CtG,QAAQC,IAAI,WACZD,QAAQC,IAAI8F,GACZ,EAAKhG,SAAS,CAAEyC,aAAcuD,IAE9B,EAAK7C,iBAtBQ,uC,EAyBfsD,OAAS,oBAAArD,EAAAC,OAAA,gDACPuB,aAAa4B,QAAQ,iBAAapG,GAElC4D,SAAS0C,SAASC,KAAO,IAHlB,sC,EAMT9G,OAAS,SAAA+G,GAAI,OAAI,WACf,EAAK5G,SAAS,CAAEgD,wBAAwB,IACxC,EAAKhD,SAAS,CAAE8C,kBAAmB8D,IACnC,EAAK5G,SAAS,CAAE6C,gBAAgB,IAChC,EAAK7C,SAAS,CACZ2C,OAAQ,EAAKjD,MAAMiD,U,EAIvBkE,aAAe,SAAAD,GAAI,OAAI,WACrB,EAAK5G,SAAS,CAAE+C,kBAAmB6D,IACnC,EAAK5G,SAAS,CACZ4C,aAAc,EAAKlD,MAAMkD,gB,EAI7B3B,oBAAsB,SAAAN,GAAY,OAAI,4BAAAyC,EAAAC,OAAA,uDACpCpD,QAAQC,IAAI,MACZD,QAAQC,IAAIS,GACRmE,EAAO,CACTgC,eAAgBnG,EAAaoG,IAC7BnG,UAAU,GALwB,WAAAwC,EAAA,MAYlBE,IAAM0D,IACtB,EAAK1G,MAAMkD,QACT,gBACA,EAAK9D,MAAM+C,aAAakB,GACxB,mBACFmB,IAjBkC,OAYhClB,EAZgC,OAoBpC3D,QAAQC,IAAI0D,GApBwB,uC,EAuBtCqD,kBAAoB,WAClB,EAAKnB,gB,wEAUL,IAAIoB,EACAC,EAAa,GAFV,uBAIP,YAAqB9G,KAAKX,MAAMgD,cAAhC,+CAA+C,CAAC,IAAvCsB,EAAsC,QACzCoD,EAAepD,EAAS4C,KACxBS,EAAuBhH,KAAKwG,aAAaO,QACShH,IAAlDC,KAAKX,MAAMuD,qBAAqBmE,KAClCC,EAAuBhH,KAAKR,OAAOuH,IAGrC,IAAIE,EACF,yBAAKC,MAAM,cAAc5F,MAAO,CAAEE,cAAe,WAC/C,uBACEF,MAAO,CACLW,MAAO,UACPN,WAAY,OACZC,YAAa,SAJjB,MATyC,uBAqB7C,YAAyB5B,KAAKX,MAAMe,cAApC,+CAAmD,CAAC,IAA3CE,EAA0C,QAE/CA,EAAaG,eAAiBkD,EAAS4C,OACb,IAA1BjG,EAAaC,WAEb0G,EACE,yBAAK3F,MAAO,CAAEE,cAAe,SAAU2F,UAAW,SAChD,uBAAGxG,QAASqG,EAAsBV,KAAK,KACrC,kBAAC,IAAD,CACEhF,MAAO,CACLC,MAAO,OACPG,QAAS,QACTC,WAAY,OACZC,YAAa,QAEfT,KAAK,KACLD,KAAK,2BArC4B,kFA6C7C4F,EAAWtG,KACT,6BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQW,KAAK,KACX,yBAAKG,MAAO,CAAEE,cAAe,SAAU2F,UAAW,cACGpH,IAAlDC,KAAKX,MAAMuD,qBAAqBmE,GAC/B,kBAAC,IAAD,CACEpG,QAASqG,EACT1F,MAAO,CACLC,MAAO,QACPC,cAAe,SACf4F,aAAc,QAEhBlG,KAAK,OACLC,KAAK,OAGP,yBACER,QAASqG,EACT3F,IAAKrB,KAAKX,MAAMuD,qBAAqBmE,GAAc5G,IACnDmB,MAAO,CACLC,MAAO,QACPC,cAAe,SACf4F,aAAc,UAKpB,uBAAG9F,MAAO,CAAEW,MAAO,SAAWqE,KAAK,KACjC,0BAAM3F,QAASqG,GAAuBD,MAI5C,kBAAC,IAAD,CAAQ5F,KAAK,KAAK8F,GAClB,kBAAC,IAAD,CAAQ9F,KAAK,KAMX,yBAAKG,MAAO,CAAE6F,UAAW,SACvB,yBACE7F,MAAO,CACLO,UAAW,SACXF,WAAY,OACZC,YAAa,cAQf7B,IADCC,KAAKX,MAAMuD,qBAAqBmE,GAE/B,kBAAC,IAAD,CACEpG,QAASX,KAAKR,OAAOuH,GACrB9E,MAAM,aAFR,UAOA,6BACE,yBACEX,MAAO,CAAEE,cAAe,SAAU2F,UAAW,SAE7C,yBACE7F,MAAO,CACLC,MAAO,OACPG,QAAS,QACTC,WAAY,OACZC,YAAa,QAEfsF,MAAM,mBACN7F,IAAI,yBAGR,2BAEIrB,KAAKX,MAAMuD,qBAAqBmE,GAC7B9B,eAQjB,kBAAC,IAAD,CAAQ9D,KAAK,KAIX,yBACE+F,MAAM,cACN5F,MAAO,CAAEE,cAAe,SAAU2F,UAAW,SAE7C,uBAAG7F,MAAO,CAAEK,WAAY,OAAQC,YAAa,SAA7C,OAGJ,kBAAC,IAAD,CAAQT,KAAK,KAKX,yBACE+F,MAAM,cACN5F,MAAO,CAAEE,cAAe,SAAU2F,UAAW,SAE7C,uBAAG7F,MAAO,CAAEK,WAAY,OAAQC,YAAa,SAA7C,QAKN,gCAjKC,kFAsKP,IAAIU,EACF,kBAAC,IAAD,CACEnB,KAAK,QACLkG,OAAQrH,KAAKX,MAAMiD,MACnB9C,OAAQQ,KAAKR,OAAO,IACpB8H,UAAQ,GAER,kBAAC,IAAD,CAAgB9H,OAAQQ,KAAKR,OAAO,KAClC,2BACE,kBAAC,IAAD,CAASyB,KAAG,EAACC,KAAK,SADpB,IAC+B,MAD/B,qBAKqC,IAAtClB,KAAKX,MAAMsD,uBACV,kBAAC,IAAD,CAAc2C,KAAK,WACjB,wBAAIhE,MAAO,CAAEK,WAAY,OAAQC,YAAa,SAA9C,oBAKF,6BACE,kBAAC,IAAD,KACE,yBAAKf,UAAU,eACb,2BACEF,QAASX,KAAK6C,aACdyC,KAAK,OACLzE,UAAU,oBACVyC,GAAG,mBACHiE,mBAAiB,0BAGnB,2BAAO1G,UAAU,oBAAoB2G,QAAQ,oBAA7C,iBAKJ,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,SAAUzH,KAAKX,MAAMmD,eACrB7B,QAASX,KAAKyD,eACdnC,MAAO,CACLI,QAAS,QACTC,WAAY,OACZC,YAAa,QAEfK,MAAM,WARR,WAkBNyF,EACF,kBAAC,IAAD,CACEvG,KAAK,KACLkG,OAAQrH,KAAKX,MAAMkD,YACnB/C,OAAQQ,KAAKwG,aAAa,IAC1Bc,UAAQ,GAER,kBAAC,IAAD,CAAgB9H,OAAQQ,KAAKwG,aAAa,KACxC,2BACE,kBAAC,IAAD,CAASvF,KAAG,EAACC,KAAK,SADpB,IAC+B,MAD/B,qBAIF,kBAAC,IAAD,KACE,kBAAC,EAAD,CACEN,oBAAqBZ,KAAKY,oBAC1BoB,eAAgBhC,KAAKgC,eACrB9B,OACEF,KAAKX,MAAMuD,qBAAqB5C,KAAKX,MAAMqD,mBAE7CN,aAAcpC,KAAKX,MAAM+C,aACzBhC,cAAeJ,KAAKX,MAAMe,kBAiFlC,OA1EAyG,EACE,6BACGvE,EACAoF,EACD,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQvG,KAAK,KAEX,yBACE+F,MAAM,eACN5F,MAAO,CAAEC,MAAO,QAASoG,OAAQ,WAEjC,6BACE,yBAAKT,MAAM,gBACT,yBACEU,YAAU,uCACVV,MAAM,eACN5F,MAAO,CAAEC,MAAO,OAAQoG,OAAQ,YAItC,yBACEC,YAAU,uCACVV,MAAM,gBAEN,yBAAKA,MAAM,gBACT,yBAAKA,MAAM,qBAKnB,kBAAC,IAAD,CAAQ/F,KAAK,KACX,yBAAKG,MAAO,CAAEuG,WAAY,UACxB,yBAAKX,MAAM,iBACT,wBAAI5F,MAAO,CAAEwG,WAAY,QAAUZ,MAAM,aAAzC,kBAKJ,6BACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQ/F,KAAK,KACX,yBAAK+F,MAAM,sBAAX,SAEF,kBAAC,IAAD,CAAQ/F,KAAK,KACX,yBAAK+F,MAAM,iBAAX,gBAEF,kBAAC,IAAD,CAAQ/F,KAAK,KACX,yBAAK+F,MAAM,iBAAX,aAEF,kBAAC,IAAD,CAAQ/F,KAAK,KACX,yBAAK+F,MAAM,iBAAX,gBAEF,kBAAC,IAAD,CAAQ/F,KAAK,KACX,yBAAK+F,MAAM,iBAAX,eAGHJ,GAEH,kBAAC,IAAD,CAAQ3F,KAAK,KACX,yBACEG,MAAO,CAAE6F,UAAW,OAAQ5F,MAAO,QACnC2F,MAAM,mBACN7F,IAAI,wBAEN,uBAAGC,MAAO,CAAEyG,YAAa,QACvB,4BAAQpH,QAASX,KAAKoG,OAAQvF,UAAU,eAAxC,cASH,6BAAMgG,O,GA5fWmB,IAAM9F,WCyInB+F,E,2MAjJb5I,MAAQ,CACN6I,UAAW,GACXC,0BAA0B,EAC1BC,eAAe,G,EAGjBC,kBAAoB,4BAAAtF,EAAAC,OAAA,uDACdyB,EAAO,CACT6D,oBAAqB,EAAKjJ,MAAM6I,WAFhB,WAAAnF,EAAA,MAKFE,IAAM6C,KACpB,yDACArB,IAPgB,OAKdrB,EALc,OAUlBxD,QAAQC,IAAIuD,EAAIC,MAEhB,EAAK1D,SAAS,CAAEwI,0BAA0B,IAZxB,sC,EAcpBI,qBAAuB,4BAAAxF,EAAAC,OAAA,kEAAAD,EAAA,MACGE,IAAMC,IAC5B,0DAFmB,UACjBsF,EADiB,OAIrB5I,QAAQC,IAAI,SACZD,QAAQC,IAAI2I,EAAYnF,KAAKiF,qBAGc,OAAzCE,EAAYnF,KAAKiF,0BACwBvI,IAAzCyI,EAAYnF,KAAKiF,qBACjBG,KAAKC,UAAUF,EAAYnF,KAAKiF,uBAC9BG,KAAKC,UAAU,IAXE,mCAAA3F,EAAA,MAaYE,IAAMC,IACnC,4EAdiB,OAafyF,EAbe,OAgBnB/I,QAAQC,IAAI,gBACZD,QAAQC,IAAI8I,EAAmBtF,KAAKiF,qBAGlCG,KAAKC,UAAUC,EAAmBtF,KAAKiF,uBACvCG,KAAKC,UAAU,KAEf,EAAK/I,SAAS,CAAEyI,eAAe,IAGjC,EAAKzI,SAAS,CACZuI,UAAWS,EAAmBtF,KAAKiF,sBA3BlB,wBA8BnB,EAAK3I,SAAS,CACZuI,UAAWM,EAAYnF,KAAKiF,sBA/BX,uC,EAoCvB1B,kBAAoB,WAClB,EAAK2B,wB,EAGPK,gBAAkB,SAAAlJ,GAChBE,QAAQC,IAAIH,EAAEmJ,OAAOvF,IACrB1D,QAAQC,IAAIH,EAAEmJ,OAAOC,SACrBlJ,QAAQC,IAAIH,EAAEmJ,OAAOtC,MACrB,EAAKlH,MAAM6I,UAAUxI,EAAEmJ,OAAOvF,IAAM5D,EAAEmJ,OAAOC,QAE7C,IAAIZ,EAAY,EAAK7I,MAAM6I,UAE3BA,EAAUxI,EAAEmJ,OAAOvF,IAAM5D,EAAEmJ,OAAOC,QAElC,EAAKnJ,SAAS,CAAEuI,UAAWA,K,wEAK3B,IAAIa,EAAa,GAGjBnJ,QAAQC,IAAI,UACZD,QAAQC,IAAIG,KAAKX,MAAM6I,WACvB,cAAgBc,OAAOC,KAAKjJ,KAAKX,MAAM6I,WAAvC,eAAmD,CAA9C,IAAIgB,EAAG,KACVtJ,QAAQC,IAAIqJ,EAAM,OAASlJ,KAAKX,MAAM6I,UAAUgB,IAChDH,EAAWvI,KACT,6BACE,kBAAC,IAAD,CACE2I,SAAUnJ,KAAK4I,gBACfQ,MAAOF,EACPG,QAAM,EACNP,QAAS9I,KAAKX,MAAM6I,UAAUgB,GAC9B5D,KAAK,WACLhC,GAAI4F,IAEN,+BAKN,IAAII,EAAiB,wCAarB,OAXiC,IAA7BtJ,KAAKX,MAAM+I,gBACbkB,EACE,6BACE,8DACA,qIAQJ,kBAAC,IAAD,CAAchI,MAAO,CAAEuG,WAAY,WACQ,IAAxC7H,KAAKX,MAAM8I,yBACV,6BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,MACA,kBAAC,IAAD,KAASmB,GACT,kBAAC,IAAD,OAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,MACA,kBAAC,IAAD,KAASP,GACT,kBAAC,IAAD,OAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEpI,QAASX,KAAKqI,kBACdZ,SAAUzH,KAAKX,MAAM+I,eAFvB,uBAOF,kBAAC,IAAD,QAIJ,yD,GA3IUJ,IAAM9F,W,wDCXtBqH,EAA4BC,EAAQ,KACpCC,EAA4BD,EAAQ,KA0BxC,SAASE,EAAeC,EAAOC,GAC7B,IAAMC,EAAqCF,EAAMG,OAJtCC,QAAQ,sBAAuB,QAM1C,GAAqB,KAAjBF,EACF,MAAO,GAGT,IAAMG,EAAQ,IAAIC,OAAO,MAAQJ,EAAc,KAE/C,OAAOD,EAAuBM,QAAO,SAAAC,GAAM,OAAIH,EAAMI,KAAKC,EAAmBF,OAG/E,SAASE,EAAmBC,GAC1B,MAAM,GAAN,OAAUA,EAAWC,MAArB,YAA8BD,EAAWE,MAG3C,SAASC,EAAiBH,EAA1B,GAAkD,IAAVI,EAAS,EAATA,MAChCC,EAAc,UAAML,EAAWC,MAAjB,YAA0BD,EAAWE,MACnDI,EAAUrB,EAA0BoB,EAAgBD,GACpDG,EAAQpB,EAA0BkB,EAAgBC,GAExD,OAGE,0BAAM/J,UAAW,qBAAsBS,MAAO,CAAEwJ,eAAgB,OAAQC,gBAAiB,OAAST,EAAWpK,OAAS,MACpH,0BAAMW,UAAU,QACbgK,EAAMG,KAAI,SAACC,EAAMC,GAChB,IAAMrK,EAAYoK,EAAKE,UAAY,YAAc,KAEjD,OACE,0BAAMtK,UAAWA,EAAWqI,IAAKgC,GAC9BD,EAAKG,W,IA2FLC,E,YAhFb,aAAe,IAAD,8BACZ,+CASFlC,SAAW,SAACmC,EAAD,GAAkC,IAAxBC,EAAuB,EAAvBA,SAAuB,EAAbnH,OAC7B,EAAKzE,SAAS,CACZgK,MAAO4B,KAZG,EAgBdC,qBAAuB,SAACF,EAAD,GAAoF,IAA1EhB,EAAyE,EAAzEA,WAAyE,EAA7DmB,gBAA6D,EAA5CC,gBAA4C,EAA3BC,aAA2B,EAAbvH,OAC3FxE,QAAQC,IAAIyK,GACZ1K,QAAQC,IAAIyL,GAEZ,EAAKrL,MAAM2L,0BAA0BtB,IApBzB,EAyCduB,4BAA8B,YAAgB,IAAblC,EAAY,EAAZA,MAC/B,EAAKhK,SAAS,CACZmM,YAAapC,EAAeC,EAAO,EAAK1J,MAAM2J,2BA3CpC,EA+CdmC,4BAA8B,WAC5B,EAAKpM,SAAS,CACZmM,YAAa,MAjDH,EAqDdE,oBAAsB,WACpBpM,QAAQC,IAAI,OAnDZ,EAAKR,MAAQ,CACXsK,MAAO,GACPmC,YAAa,GACbG,eAAgB,IANN,E,sEA0DJ,IAAD,EACwBjM,KAAKX,MAA5BsK,EADD,EACCA,MAAOmC,EADR,EACQA,YACTI,EAAa,CACjBC,YAAa,mBACbxC,QACAR,SAAUnJ,KAAKmJ,UAGjB,OACE,kBAAC,IAAD,CACE2C,YAAaA,EACbD,4BAA6B7L,KAAK6L,4BAClCE,4BAA6B/L,KAAK+L,4BAClC1B,mBAAoBA,EACpBmB,qBAAsBxL,KAAKwL,qBAC3Bf,iBAAkBA,EAClByB,WAAYA,Q,GA3EIlE,IAAM9F,WC8hBfkK,E,2MA5kBb/M,MAAQ,CACNgN,kBAAmB,GACnBC,sBAAsB,EACtB3J,wBAAwB,EACxBiH,uBAAwB,GACxB2C,cAAe,GACfC,eAAgB,GAChBC,aAAa,EACbC,uBAAwB,GACxBC,uBAAwB,GACxBvM,cAAe,GACfwM,iBAAkB,GAClBnK,kBAAmB,oBACnBoK,kBAAmB,CAAC,iBAAkB,eACtCC,wBAAyB,iBACzBC,SAAU,cACVC,WAAY,sBACZC,IAAK,cACLC,sBAAsB,EACtBC,8BAA0BpN,EAC1BqN,8BAA0BrN,G,EAG5BsN,kBAAoB,WAClB,EAAK1N,SAAS,CACZ8M,aAAc,EAAKpN,MAAMoN,e,EAI7Ba,gBAAkB,SAAA/G,GAAI,OAAI,8BAAAxD,EAAAC,OAAA,uDACxBpD,QAAQC,IAAI,eACR4E,EAAO,CACTnE,aAAc,CACZiN,UAAW,EAAKlO,MAAMmN,eAAe9F,IACrCjG,aAAc8F,IALM,WAAAxD,EAAA,MAWRE,IAAM6C,KACpB,EAAK7F,MAAMkD,QACT,gBACA,EAAK9D,MAAMmN,eAAe9F,IAC1B,kBACFjC,IAhBsB,OAWpBrB,EAXoB,OAmBxBxD,QAAQC,IAAIuD,GAEZ,EAAKzD,SAAS,CAAEuN,sBAAsB,KAElCM,EAAO,EAAKnO,MAAMsN,wBAEjBpG,IAAQ,EACb,EAAK5G,SAAS,CAAEgN,uBAAwBa,IA1BhB,wC,EA6B1B3K,aAAe,WACb,EAAKlD,SAAS,CAAE6C,gBAAgB,K,EAGlCiL,eAAiB,8CAAA1K,EAAAC,OAAA,uDACfpD,QAAQC,IAAI,gBADG,WAAAkD,EAAA,MAECE,IAAMC,IAAI,EAAKjD,MAAMkD,QAAU,mBAFhC,OAKf,IAHIC,EAFW,OAGfxD,QAAQC,IAAIuD,EAAIC,MACZuG,EAAyB,GAJd,4BAKf,EAAoBxG,EAAIC,KAAxB,+CACuB,WADdsC,EAAqB,SAChB3E,OACNd,EAAS,0BACY,eAArByF,EAAQ+H,WACVxN,EAAS,uBAEPkC,EAAe,CACjBmI,MAAO5E,EAAQ+H,SACflD,KAAM7E,EAAQ3E,KACdd,OAAQA,EACRoD,GAAIqC,EAAQe,KAEdkD,EAAuBpJ,KAAK4B,IAjBjB,gPAqBf,EAAKzC,SAAS,CAAEiK,uBAAwBA,IACxC,EAAKjK,SAAS,CAAE4M,cAAenJ,EAAIC,OAtBpB,YAAAN,EAAA,MAwBME,IAAMC,IAAI,EAAKjD,MAAMkD,QAAU,yBAxBrC,QAwBXwK,EAxBW,OAyBf/N,QAAQC,IAAI,cACZD,QAAQC,IAAI8N,EAAStK,KAAKhB,eAC1B,EAAK1C,SAAS,CAAEiN,iBAAkBe,EAAStK,KAAKhB,gBA3BjC,4E,EA8BjBS,eAAiB,oBAAAC,EAAAC,OAAA,+E,EAOjB4I,0BAA4B,SAAMgC,GAAN,mBAAA7K,EAAAC,OAAA,uDAC1BpD,QAAQC,IAAI,iBACZD,QAAQC,IAAI+N,GAENC,EAAQ,EAAKxO,MAAMkN,cAAcuB,MACrC,SAAAC,GAAO,OAAIA,EAAQrH,MAAQkH,EAAMtK,MAEnC1D,QAAQC,IAAIgO,GACZ,EAAKlO,SAAS,CAAE6M,eAAgBqB,IAEV,GAVI,WAAA9K,EAAA,MAWVE,IAAMC,IACpB,EAAKjD,MAAMkD,QAAU,gBAAkB0K,EAAMnH,IAAM,oBAZ3B,cAWtBtD,EAXsB,mBAAAL,EAAA,MAeRE,IAAMC,IACtB,EAAKjD,MAAMkD,QAAU,gBAAkB0K,EAAMnH,IAAM,oBAhB3B,QAetBnD,EAfsB,OAmB1B,EAAK5D,SAAS,CAAES,cAAemD,EAAMF,OAErCzD,QAAQC,IAAIuD,EAAIC,MAChB,EAAK1D,SAAS,CAAE+M,uBAAwBtJ,EAAIC,OAtBlB,uC,EA+D5B2K,0BAA4B,oCAAAjL,EAAAC,OAAA,uDAC1B,EAAKrD,SAAS,CAAEgD,wBAAwB,IAClCe,EAAOC,SAASC,eAAe,oBAAoBC,MACnDoK,EAAQtK,SAASC,eAAe,oBAAoBC,OAEtDA,EAAQ,IACNrD,KAAKkD,EAAK,IAChBG,EAAMrD,KAAKyN,EAAM,KACXnK,EAAW,IAAIC,UAGZC,OAAO,MAAON,EAAK,IAC5BI,EAASE,OAAO,MAAOiK,EAAM,IAE7BnK,EAASE,OAAO,OAAQ,EAAK3E,MAAMoD,mBACnCqB,EAASE,OAAO,mBAAoB,EAAK3E,MAAMyN,yBAC/ChJ,EAASE,OAAO,aAAc,EAAK3E,MAAM2N,YACzClJ,EAASE,OAAO,YAAa,EAAK3E,MAAM0N,UACxCjJ,EAASE,OAAO,MAAO,EAAK3E,MAAM4N,KAGlCrN,QAAQC,IAAI,EAAKR,MAAMmN,gBACvB1I,EAASE,OAAO,qBAAsB,EAAK3E,MAAMmN,eAAe9F,KAEhE9G,QAAQC,IAAIiE,EAASoK,UAxBK,YAAAnL,EAAA,MAyBVoB,MACd,EAAKlE,MAAMkD,QACT,uDACF,CACEiB,OAAQ,OACRC,QAAS,CACPC,cAAe,SAAWC,aAAaC,QAAQ,mBAEjDC,KAAMX,KAjCgB,eAyBtBV,EAzBsB,OAqC1BxD,QAAQC,IAAI,aArCc,YAAAkD,EAAA,MA0CNK,EAAI+K,QA1CE,QA0CtBC,EA1CsB,OA2C1BxO,QAAQC,IAAIuO,GAEZ,EAAKzO,SAAS,CAAEwN,yBAA0B1E,KAAKC,UAAU0F,EAAQC,MACjE,EAAK1O,SAAS,CAAEyN,yBAA0B3E,KAAKC,UAAU0F,EAAQE,MA9CvC,uC,EAoD5B9K,aAAe,0CAAAT,EAAAC,OAAA,kEAAAD,EAAA,MACYE,IAAMC,IAAI,EAAKjD,MAAMkD,QAAU,oBAD3C,OAOb,IANIuB,EADS,OAETC,EAAYD,EAAarB,KAAKsB,UAClC/E,QAAQC,IAAI,cACZD,QAAQC,IAAI8E,GACR/B,EAAuB,GAElBgC,EAAI,EAAGA,EAAID,EAAUE,OAAQD,IAChCE,EACF,EAAK7E,MAAMkD,QAAU,kBAAoBwB,EAAUC,GAAGzE,IACpD4E,EAAOC,IAAOL,EAAUC,GAAGK,WAC3BC,EAAgBH,EAAKI,OAAO,eAC5BC,EAAY,CAAEH,UAAWC,EAAe/E,IAAK2E,GAC7CQ,EAAOX,EAAUC,GAAGU,KACxB1C,EAAqB0C,GAAQF,EAG/B,EAAKzF,SAAS,CAAEiD,qBAAsBA,IAjBzB,sC,EAoBf2L,kBAAoB,8BAAAxL,EAAAC,OAAA,uDAClB,EAAKrD,SAAS,CAAE+F,iBAAiB,IAC7BjB,EAAO,CACTkB,QAAS,CACPC,MAAO,4BACPC,SAAU,eALI,WAAA9C,EAAA,MASGE,IAAM6C,KACzB,EAAK7F,MAAMkD,QAAU,sBACrBsB,IAXgB,cASdsB,EATc,OAcdJ,EAAUI,EAAS1C,KAAKsC,QAE5B1C,IAAM+C,SAAS3B,QAAQ4B,OAAvB,cAAiD,UAAYN,EAAQO,MACrE3B,aAAa4B,QAAQ,iBAAkBR,EAAQO,OAE/C,EAAKvG,SAAS,CAAE0M,kBAAmB1G,IAnBjB,YAAA5C,EAAA,MAqBZ,EAAK0K,kBArBO,uC,EAwBpBrH,OAAS,oBAAArD,EAAAC,OAAA,gDACPuB,aAAa4B,QAAQ,sBAAkBpG,GACvC4D,SAAS0C,SAASC,KAAO,IAFlB,sC,EAKTM,kBAAoB,WAClB,EAAK2H,qB,EAGPC,gBAAkB,SAAA9O,GAChB,EAAKC,SAAS,CAAEoN,SAAUrN,EAAEmJ,OAAOc,S,EAGrC8E,iBAAmB,SAAA/O,GACjB,EAAKC,SAAS,CAAEqN,WAAYtN,EAAEmJ,OAAOc,S,EAGvC+E,cAAgB,SAAAhP,GACd,EAAKC,SAAS,CAAEsN,IAAKvN,EAAEmJ,OAAOc,S,EAGhCgF,uBAAyB,SAAAjP,GACvB,EAAKC,SAAS,CAAEmN,wBAAyBpN,EAAEmJ,OAAOc,S,EAGpDiF,mBAAqB,SAAAlP,GACnB,EAAKC,SAAS,CAAE8C,kBAAmB/C,EAAEmJ,OAAOc,S,wEAI5C,IAAIkF,EACAC,EAqEAC,EAnEAC,EAA8B,GAJ3B,uBAMP,YAAyBhP,KAAKX,MAAMqN,uBAApC,+CAA4D,CAAC,IAApDjM,EAAmD,QACtDwO,EACF,kBAAC,IAAD,CAAQtO,QAASX,KAAKsN,gBAAgB7M,GAAewB,MAAM,aAA3D,WAFwD,uBAO1D,YAAyBjC,KAAKX,MAAMe,cAApC,+CAAmD,CAAC,IAA3CE,EAA0C,QACjD,GACEA,EAAaG,eAAiBA,GAC9BH,EAAaI,qBAAuBV,KAAKX,MAAMgN,kBAAkB/I,KACvC,IAA1BhD,EAAaC,SAEb0O,EACE,kBAAC,IAAD,CACExH,UAAQ,EACR9G,QAASX,KAAKsN,gBAAgB7M,GAC9BwB,MAAM,aAHR,kBAQG,GACL3B,EAAaG,eAAiBA,GAC9BH,EAAaI,qBAAuBV,KAAKX,MAAMgN,kBAAkB/I,KACvC,IAA1BhD,EAAaC,SACb,CAEA,IAAIL,EACF,uCACAI,EAAawE,YACb,IACAO,OAAOd,aAAaC,QAAQ,kBAC9ByK,EAAgB,yBAAK5N,IAAKnB,MAjC4B,kFAqC1DN,QAAQC,IAAI,mDACZD,QAAQC,IAAIY,GACZb,QAAQC,IAAIG,KAAKX,MAAMsN,uBAAuBlM,IACS,GAAnDT,KAAKX,MAAMsN,uBAAuBlM,KACpCwO,EACE,kBAAC,IAAD,CACExH,UAAQ,EACR9G,QAASX,KAAKsN,gBAAgB7M,GAC9BwB,MAAM,aAHR,cAWJ+M,EAA4BxO,KAC1B,6BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,4BAAKC,IAEP,kBAAC,IAAD,KAASwO,GACT,iCAlED,kFA0ELF,EADyC,eAAvC/O,KAAKX,MAAMmN,eAAekB,SAE1B,yBACEpM,MAAO,CAAE4N,OAAQ,OAAQ3N,MAAO,SAChC2F,MAAM,mBACN7F,IAAI,wBAKN,yBACEC,MAAO,CAAE4N,OAAQ,OAAQ3N,MAAO,SAChC2F,MAAM,mBACN7F,IAAI,iCAKiCtB,IAAvCC,KAAKX,MAAMmN,eAAekB,WAC5BmB,EACE,yBAAKvN,MAAO,CAAEO,UAAW,SAAUsF,UAAW,UAC5C,4BAAKnH,KAAKX,MAAMmN,eAAekB,UAC9BqB,EACD,4DACgC/O,KAAKX,MAAMmN,eAAekB,UAE1D,kBAAC,IAAD,CAAQ/M,QAASX,KAAKqN,kBAAmBpL,MAAM,aAA/C,WAMJ6M,EACE,yBAAKxN,MAAO,CAAEO,UAAW,SAAUsF,UAAW,UAC5C,mDACA,6BACC6H,IAKP,IAAIG,EACF,4BAAQhG,SAAUnJ,KAAK4O,oBACpB5O,KAAKX,MAAMuN,iBAAiB5B,KAAI,SAACoE,EAAGC,GAAJ,OAC/B,4BAAQnG,IAAKmG,EAAE9I,MAAO6I,EAAE7I,UAK1BsG,EACF,4BAAQ1D,SAAUnJ,KAAK2O,wBACpB3O,KAAKX,MAAMwN,kBAAkB7B,KAAI,SAACoE,EAAGC,GAAJ,OAChC,4BAAQnG,IAAKmG,GAAID,OAKnBE,EACF,yBAAKzO,UAAU,8BAA8BG,KAAK,UAChD,0BAAMH,UAAU,WAAhB,oBAIwCd,IAAxCC,KAAKX,MAAM8N,2BACbmC,EACE,6BACE,qDACA,2BAAItP,KAAKX,MAAM8N,0BACf,uDACA,2BAAInN,KAAKX,MAAM+N,4BAKrB,IAAImC,EACF,kBAAC,IAAD,CACEpO,KAAK,IACLkG,OAAQrH,KAAKX,MAAMoN,YACnBjN,OAAQQ,KAAKqN,kBACb/F,UAAQ,GAER,kBAAC,IAAD,CAAgB9H,OAAQQ,KAAKqN,mBAC3B,2BACE,kBAAC,IAAD,CAASpM,KAAG,EAACC,KAAK,SADpB,uCAIF,kBAAC,IAAD,CAAcI,MAAO,CAAEO,UAAW,YACO,IAAtC7B,KAAKX,MAAMsD,uBACV,6BACE,wBAAIrB,MAAO,CAAEuG,WAAY,SAAzB,+BAC+B,IAC5B7H,KAAKX,MAAMmN,eAAekB,UAE7B,yBAAK7M,UAAU,eACb,2BACEF,QAASX,KAAK6C,aACdyC,KAAK,OACLhC,GAAG,mBACHiE,mBAAiB,2BAEd,IACP,wBAAIjG,MAAO,CAAEuG,WAAY,SAAzB,kCAGCsH,EACD,wBAAI7N,MAAO,CAAEuG,WAAY,SAAzB,sCAGCgF,EACD,kBAAC,IAAD,CACEvL,MAAO,CAAEuG,WAAY,QACrBsB,SAAUnJ,KAAKwO,gBACflJ,KAAK,WACL8D,MAAM,kBACNoG,KAAK,MAEP,kBAAC,IAAD,CACElO,MAAO,CAAEuG,WAAY,QACrBsB,SAAUnJ,KAAKyO,iBACfnJ,KAAK,WACL8D,MAAM,cACNoG,KAAK,MAEP,wBAAIlO,MAAO,CAAEuG,WAAY,SAAzB,sBACA,yBAAKhH,UAAU,eACb,2BACEF,QAASX,KAAK6C,aACdyC,KAAK,OACLhC,GAAG,mBACHiE,mBAAiB,2BAGrB,kBAAC,IAAD,CACEjG,MAAO,CAAEuG,WAAY,QACrBsB,SAAUnJ,KAAK0O,cACfpJ,KAAK,WACL8D,MAAM,kBACNoG,KAAK,MAEP,kBAAC,IAAD,CAAQ7O,QAASX,KAAKgO,2BAAtB,wBAKF,6BACGsB,KAUX,OACE,6BACGC,EACD,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQpO,KAAK,KAEX,yBACE+F,MAAM,eACN5F,MAAO,CAAEC,MAAO,QAASoG,OAAQ,WAEjC,6BACE,yBAAKT,MAAM,gBACT,yBACEU,YAAU,uCACVV,MAAM,eACN5F,MAAO,CAAEC,MAAO,OAAQoG,OAAQ,YAItC,yBACEC,YAAU,uCACVV,MAAM,gBAEN,yBAAKA,MAAM,gBACT,yBAAKA,MAAM,qBAKnB,kBAAC,IAAD,CAAQ/F,KAAK,KACX,yBAAKG,MAAO,CAAEuG,WAAY,UACxB,yBAAKX,MAAM,iBACT,wBAAI5F,MAAO,CAAEwG,WAAY,QAAUZ,MAAM,aAAzC,YAKJ,6BAEA,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,yBAAK5F,MAAO,CAAEO,UAAW,WACvB,kBAAC,EAAD,CACE+J,0BAA2B5L,KAAK4L,0BAChChC,uBAAwB5J,KAAKX,MAAMuK,4BAM3C,kBAAC,IAAD,KACE,kBAAC,IAAD,KAASiF,GACT,kBAAC,IAAD,KAASC,KAGb,kBAAC,IAAD,CAAQ3N,KAAK,KACX,yBACEG,MAAO,CAAE6F,UAAW,OAAQ5F,MAAO,QACnC2F,MAAM,mBACN7F,IAAI,kCAEN,uBAAGC,MAAO,CAAEyG,YAAa,QACvB,4BAAQpH,QAASX,KAAKoG,OAAQvF,UAAU,eAAxC,kB,GAlkBmBmH,IAAM9F,WCqFxBuN,E,2MApFbhK,aAAe,oBAAA1C,EAAAC,OAAA,gDACb,EAAK/C,MAAMyP,QAAQlP,KAAK,UADX,sC,EAIf+N,kBAAoB,oBAAAxL,EAAAC,OAAA,gDAClB,EAAK/C,MAAMyP,QAAQlP,KAAK,eADN,sC,wEAKlB,OACE,6BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,MACA,kBAAC,IAAD,KACE,yBACEc,MAAO,CACL6F,UAAW,QACX5F,MAAO,QACPG,QAAS,QACTC,WAAY,OACZC,YAAa,QAEfP,IAAI,gCAEN,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,yBAAKC,MAAO,CAAE6F,UAAW,UACvB,yBACE7F,MAAO,CACLC,MAAO,OACPG,QAAS,QACTC,WAAY,OACZC,YAAa,QAEfsF,MAAM,mBACN7F,IAAI,wBAEN,kBAAC,IAAD,CACEV,QAASX,KAAKyF,aACdnE,MAAO,CACLI,QAAS,QACTC,WAAY,OACZC,YAAa,QAEfK,MAAM,WAPR,oBAaJ,kBAAC,IAAD,KACE,yBAAKX,MAAO,CAAE6F,UAAW,UACvB,yBACE7F,MAAO,CACLC,MAAO,OACPG,QAAS,QACTC,WAAY,OACZC,YAAa,QAEfsF,MAAM,mBACN7F,IAAI,kCAEN,kBAAC,IAAD,CACEV,QAASX,KAAKuO,kBACdjN,MAAO,CACLI,QAAS,QACTC,WAAY,OACZC,YAAa,QAEfK,MAAM,WAPR,4BAeR,kBAAC,IAAD,Y,GA9EmB+F,IAAM9F,W,wBCL7ByN,EAAiB,CACrBpJ,KAAM,cACNqJ,SAAU,6CACVC,OAAQ,mCA8GKC,E,2MA1GbzQ,MAAQ,CACN0Q,WAAOhQ,EACPiQ,cAAUjQ,EACVkQ,gBAAYlQ,EACZmQ,eAAe,EACfC,eAAgB,6CAChBC,IACE,o2B,EAGJxJ,kBAAoB,WAGlB,IAAMoJ,EAAW,IAAIK,IAASC,sBAAYX,IAC1C/P,QAAQC,IAAImQ,GACZ,EAAKrQ,SAAS,CAAEqQ,SAAUA,K,EAG5BO,UAAY,SAAA7Q,GACV,EAAKC,SAAS,CAAEyQ,IAAK1Q,EAAEmJ,OAAOc,S,EAGhC6G,iBAAmB,0BAAAzN,EAAAC,OAAA,2EAAAD,EAAA,MAGI0N,2BAAiB,EAAKpR,MAAM+Q,IAAK,EAAK/Q,MAAM2Q,WAHhD,OAGfC,EAHe,8DAKfrQ,QAAQC,IAAR,MACA,EAAKF,SAAS,CAAEoQ,MAAO,KAAEW,UANV,2BAUjB9Q,QAAQC,IAAIoQ,GAGVA,EAAWU,OAAOrN,GACfsN,cACAC,SAAS,EAAKxR,MAAM8Q,eAAeS,gBAEtC,EAAKjR,SAAS,CAAEuQ,eAAe,IAEjC,EAAKvQ,SAAS,CAAEsQ,WAAYA,IAC5B,EAAKtQ,SAAS,CAAEoQ,WAAOhQ,IApBN,yD,wEAwBjB,OACE,kBAAC,IAAD,CAAcuB,MAAO,CAAEuG,WAAY,UACjC,0CACC7H,KAAKX,MAAM0Q,OAAStH,KAAKC,UAAU1I,KAAKX,MAAM0Q,OAE/C,kBAAC,IAAD,CACEzO,MAAO,CAAEuG,WAAY,QACrBsB,SAAUnJ,KAAKuQ,UACfjL,KAAK,WACL8D,MAAM,sBACNoG,KAAK,MAGP,kBAAC,IAAD,CAAQ7O,QAASX,KAAKwQ,kBAAtB,UAEA,kBAAC,IAAD,CAAQlP,MAAO,CAAEO,UAAW,WAC1B,kBAAC,IAAD,KACG7B,KAAKX,MAAM6Q,eACV,kBAAC,IAAD,CAAS5O,MAAO,CAAEuG,WAAY,QAAU1G,KAAK,KAAKD,KAAK,WAG3D,kBAAC,IAAD,KACE,+CACA,yBACEI,MAAO,CAAE4N,OAAQ,OAAQ3N,MAAO,QAChC2F,MAAM,mBACN7F,IAAI,kCAELrB,KAAKX,MAAM4Q,YAAcjQ,KAAKX,MAAM8Q,gBAEvC,kBAAC,IAAD,KACE,wBAAI7O,MAAO,CAAEuG,WAAY,UAAzB,OAEF,kBAAC,IAAD,KACE,+CACA,yBACEvG,MAAO,CAAE4N,OAAQ,OAAQ3N,MAAO,QAChC2F,MAAM,mBACN7F,IAAI,2BAELrB,KAAKX,MAAM4Q,YAAcjQ,KAAKX,MAAM4Q,WAAWU,OAAOrN,KAI3D,wBAAIhC,MAAO,CAAEuG,WAAY,SAAzB,WACC7H,KAAKX,MAAM4Q,YAAcjQ,KAAKX,MAAM4Q,WAAWa,QAAQC,IAExD,wBAAIzP,MAAO,CAAEuG,WAAY,SAAzB,UACC7H,KAAKX,MAAM4Q,YAAcjQ,KAAKX,MAAM4Q,WAAWe,OAEhD,wBAAI1P,MAAO,CAAEuG,WAAY,SAAzB,UACC7H,KAAKX,MAAM4Q,YAAcjQ,KAAKX,MAAM4Q,WAAWU,OAAOrN,GAEvD,wBAAIhC,MAAO,CAAEuG,WAAY,SAAzB,qBACC7H,KAAKX,MAAM4Q,YAAcxH,KAAKC,UAAU1I,KAAKX,MAAM4Q,iB,GArGvCjI,IAAM9F,WCRrB+O,EAAW,2BA8BFC,MA3Bf,WACE,OACE,kBAAC,IAAD,KACE,6BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,WACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,UACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,UACV,kBAAC,EAAD,CAAehO,QAAS8N,KAE1B,kBAAC,IAAD,CAAOE,KAAK,eACV,kBAAC,EAAD,CAAoBhO,QAAS8N,KAE/B,kBAAC,IAAD,CACEE,KAAK,IACLC,OAAQ,SAAAC,GAAU,OAAI,kBAAC,EAAmBA,UC3BlCC,QACW,cAA7BjM,OAAOgB,SAASkL,UAEe,UAA7BlM,OAAOgB,SAASkL,UAEhBlM,OAAOgB,SAASkL,SAASC,MACvB,2DCZNC,IAASL,OAAO,kBAAC,EAAD,MAASzN,SAASC,eAAe,SD6H3C,kBAAmB8N,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.a3ccadea.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  MDBContainer,\r\n  MDBTabPane,\r\n  MDBTabContent,\r\n  MDBNav,\r\n  MDBNavItem,\r\n  MDBNavLink,\r\n  MDBIcon,\r\n  MDBBtn,\r\n  MDBRow,\r\n  MDBCol\r\n} from \"mdbreact\";\r\n\r\nclass DetailTabs extends Component {\r\n  state = {\r\n    activeItem: \"1\",\r\n    deleteClicked: false\r\n  };\r\n\r\n  toggle = tab => e => {\r\n    if (this.state.activeItem !== tab) {\r\n      this.setState({\r\n        activeItem: tab\r\n      });\r\n    }\r\n  };\r\n\r\n  deleteClicked = () => {\r\n    console.log(\"delete clicked\");\r\n    this.setState({ deleteClicked: true });\r\n  };\r\n\r\n  render() {\r\n    let docUrl = \"#\";\r\n    if (this.props.imgSrc !== undefined) {\r\n      docUrl = this.props.imgSrc.url;\r\n    }\r\n\r\n    let shareRequests = [];\r\n    let approvedShareRequests = [];\r\n\r\n    for (let shareRequest of this.props.shareRequests) {\r\n      console.log(\"share request\");\r\n      console.log(shareRequest);\r\n      if (shareRequest.approved) {\r\n        approvedShareRequests.push(\r\n          <div>\r\n            <p>Type: {shareRequest.documentType}</p>\r\n            <p>Share With: {shareRequest.shareWithAccountId}</p>\r\n            <p>Approved: {shareRequest.approved}</p>\r\n            <hr></hr>\r\n          </div>\r\n        );\r\n      } else {\r\n        shareRequests.push(\r\n          <div>\r\n            <p>Type: {shareRequest.documentType}</p>\r\n            <p>Share With: {shareRequest.shareWithAccountId}</p>\r\n            <p>Approved: {shareRequest.approved}</p>\r\n            <MDBBtn onClick={this.props.approveShareRequest(shareRequest)}>\r\n              Approve\r\n            </MDBBtn>\r\n            <hr></hr>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n\r\n    return (\r\n      <MDBContainer>\r\n        <MDBNav className=\"nav-tabs mt-5\">\r\n          <MDBNavItem>\r\n            <MDBNavLink\r\n              to=\"#\"\r\n              active={this.state.activeItem === \"1\"}\r\n              onClick={this.toggle(\"1\")}\r\n              role=\"tab\"\r\n            >\r\n              Preview\r\n            </MDBNavLink>\r\n          </MDBNavItem>\r\n          <MDBNavItem>\r\n            <MDBNavLink\r\n              to=\"#\"\r\n              active={this.state.activeItem === \"2\"}\r\n              onClick={this.toggle(\"2\")}\r\n              role=\"tab\"\r\n            >\r\n              Share\r\n            </MDBNavLink>\r\n          </MDBNavItem>\r\n          <MDBNavItem>\r\n            <MDBNavLink\r\n              to=\"#\"\r\n              active={this.state.activeItem === \"2\"}\r\n              onClick={this.toggle(\"3\")}\r\n              role=\"tab\"\r\n            >\r\n              Replace\r\n            </MDBNavLink>\r\n          </MDBNavItem>\r\n          <MDBNavItem>\r\n            <MDBNavLink\r\n              to=\"#\"\r\n              active={this.state.activeItem === \"3\"}\r\n              onClick={this.toggle(\"4\")}\r\n              role=\"tab\"\r\n            >\r\n              <MDBIcon far icon=\"trash-alt\" size=\"2x\" />\r\n            </MDBNavLink>\r\n          </MDBNavItem>\r\n        </MDBNav>\r\n        <MDBTabContent activeItem={this.state.activeItem}>\r\n          <MDBTabPane tabId=\"1\" role=\"tabpanel\">\r\n            <img\r\n              src={docUrl}\r\n              style={{\r\n                width: \"400px\",\r\n                verticalAlign: \"middle\",\r\n                padding: \"50px\",\r\n                display: \"block\",\r\n                marginLeft: \"auto\",\r\n                marginRight: \"auto\"\r\n              }}\r\n            />\r\n          </MDBTabPane>\r\n          <MDBTabPane tabId=\"2\" role=\"tabpanel\">\r\n            <div>\r\n              <h3 style={{ padding: \"25px\", textAlign: \"center\" }}>\r\n                Share Requests:\r\n              </h3>\r\n              <hr></hr>\r\n              {shareRequests}\r\n\r\n              <h3 style={{ padding: \"25px\", textAlign: \"center\" }}>\r\n                Approved Share Requests:\r\n              </h3>\r\n              <hr></hr>\r\n              {approvedShareRequests}\r\n            </div>\r\n          </MDBTabPane>\r\n          <MDBTabPane tabId=\"3\" role=\"tabpanel\">\r\n            <div>\r\n              <h3 style={{ padding: \"25px\", textAlign: \"center\" }}>\r\n                Replace Feature Coming Soon...\r\n              </h3>\r\n            </div>\r\n          </MDBTabPane>\r\n          <MDBTabPane tabId=\"4\" role=\"tabpanel\">\r\n            <div style={{ backgroundColor: \"#d3d3d3\", borderRadius: \"25px\" }}>\r\n              {this.state.deleteClicked === false ? (\r\n                <div>\r\n                  <h3 style={{ padding: \"25px\", textAlign: \"center\" }}>\r\n                    Are you sure you want to permanently delete this file?\r\n                  </h3>\r\n\r\n                  <img\r\n                    src={docUrl}\r\n                    style={{\r\n                      width: \"400px\",\r\n                      verticalAlign: \"middle\",\r\n                      padding: \"50px\",\r\n                      display: \"block\",\r\n                      marginLeft: \"auto\",\r\n                      marginRight: \"auto\"\r\n                    }}\r\n                  />\r\n\r\n                  <h6 style={{ padding: \"25px\", textAlign: \"center\" }}>\r\n                    Deleting this file will permanently revoke access to all\r\n                    users\r\n                  </h6>\r\n                  <h6 style={{ padding: \"25px\", textAlign: \"center\" }}>\r\n                    Are you sure?\r\n                  </h6>\r\n                  <div\r\n                    style={{\r\n                      textAlign: \"center\",\r\n                      marginLeft: \"auto\",\r\n                      marginRight: \"auto\"\r\n                    }}\r\n                  >\r\n                    <MDBBtn\r\n                      onClick={() => {\r\n                        this.props.deleteDocument();\r\n                        this.deleteClicked();\r\n                      }}\r\n                      color=\"red\"\r\n                    >\r\n                      Yes, Delete it\r\n                    </MDBBtn>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <h3 style={{ padding: \"25px\", textAlign: \"center\" }}>\r\n                  File has been deleted\r\n                </h3>\r\n              )}\r\n            </div>\r\n          </MDBTabPane>\r\n        </MDBTabContent>\r\n      </MDBContainer>\r\n    );\r\n  }\r\n}\r\nexport default DetailTabs;\r\n","import React, { Component, Link } from \"react\";\r\nimport {\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBModalFooter,\r\n  MDBAlert,\r\n  MDBContainer,\r\n  MDBIcon,\r\n  MDBRow,\r\n  MDBCol,\r\n  MDBInput,\r\n  MDBBtn,\r\n  MDBDropdown,\r\n  MDBDropdownToggle,\r\n  MDBDropdownMenu,\r\n  MDBDropdownItem,\r\n  MDBAnimation\r\n} from \"mdbreact\";\r\nimport axios from \"axios\";\r\nimport DetailTabs from \"./detailTabs\";\r\nimport moment from \"moment\";\r\n\r\nclass OwnerWorkflow extends React.Component {\r\n  state = {\r\n    ownerAccount: {},\r\n    documentTypes: [],\r\n    modal: false,\r\n    detailModal: false,\r\n    uploadDisabled: true,\r\n    currentUploadType: \"\",\r\n    currentDetailType: \"\",\r\n    uploadDocumentFinished: false,\r\n    documentTypeToUrlMap: {},\r\n    shareRequests: []\r\n  };\r\n\r\n  fileSelected = () => {\r\n    this.setState({ uploadDisabled: false });\r\n  };\r\n\r\n  getAccountData = async () => {\r\n    let res = await axios.get(this.props.urlBase + \"/api/document-types/\");\r\n    console.log(res);\r\n    this.setState({ documentTypes: res.data.documentTypes });\r\n\r\n    let sqRes = await axios.get(\r\n      this.props.urlBase +\r\n        \"/api/account/\" +\r\n        this.state.ownerAccount.id +\r\n        \"/share-requests\"\r\n    );\r\n\r\n    this.setState({ shareRequests: sqRes.data });\r\n\r\n    this.getDocuments();\r\n  };\r\n\r\n  uploadDocument = async () => {\r\n    this.setState({ uploadDocumentFinished: true });\r\n    const file = document.getElementById(\"inputGroupFile01\").files;\r\n    const formData = new FormData();\r\n    formData.append(\"img\", file[0]);\r\n    formData.append(\"type\", this.state.currentUploadType);\r\n\r\n    if (\r\n      this.state.uploadForAccountName !== undefined &&\r\n      this.state.uploadForAccountId !== undefined\r\n    ) {\r\n      formData.append(\"uploadForAccountName\", this.state.uploadForAccountName);\r\n      formData.append(\"uploadForAccountId\", this.state.uploadForAccountId);\r\n\r\n      let res = await fetch(\r\n        this.props.urlBase + \"/api/uploadDocumentOnBehalfOfUser/\",\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            authorization: \"Token \" + localStorage.getItem(\"jwt-owner\")\r\n          },\r\n          body: formData\r\n        }\r\n      );\r\n    } else {\r\n      let res = await fetch(this.props.urlBase + \"/api/documents/\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          authorization: \"Token \" + localStorage.getItem(\"jwt-owner\")\r\n        },\r\n        body: formData\r\n      });\r\n    }\r\n\r\n    // this.setState({ uploadDocumentFinished: true });\r\n    this.getDocuments();\r\n  };\r\n\r\n  getDocuments = async () => {\r\n    let documentsRes = await axios.get(this.props.urlBase + \"/api/documents/\");\r\n    let documents = documentsRes.data.documents;\r\n    console.log(\"documents:\");\r\n    console.log(documents);\r\n    let documentTypeToUrlMap = {};\r\n\r\n    for (var i = 0; i < documents.length; i++) {\r\n      let documentUrl =\r\n        this.props.urlBase + \"/api/documents/\" + documents[i].url;\r\n      let date = moment(documents[i].createdAt);\r\n      let humanReadable = date.format(\"MMM Do YYYY\");\r\n      let docObject = {\r\n        createdAt: humanReadable,\r\n        url: documentUrl + \"/\" + window.localStorage.getItem(\"jwt-owner\")\r\n      };\r\n      let type = documents[i].type;\r\n      documentTypeToUrlMap[type] = docObject;\r\n    }\r\n\r\n    this.setState({ documentTypeToUrlMap: documentTypeToUrlMap });\r\n  };\r\n\r\n  deleteDocument = async () => {\r\n    const filename = this.state.documentTypeToUrlMap[\r\n      this.state.currentDetailType\r\n    ].url;\r\n\r\n    let documentsRes = await axios.delete(filename);\r\n\r\n    this.getDocuments();\r\n  };\r\n\r\n  loginAsOwner = async () => {\r\n    this.setState({ loggedInAsOwner: true });\r\n    let body = {\r\n      account: {\r\n        email: \"owner@owner.com\",\r\n        password: \"owner\"\r\n      }\r\n    };\r\n\r\n    let loginRes = await axios.post(\r\n      this.props.urlBase + \"/api/accounts/login\",\r\n      body\r\n    );\r\n\r\n    let account = loginRes.data.account;\r\n\r\n    axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + account.token;\r\n    localStorage.setItem(\"jwt-owner\", account.token);\r\n    console.log(\"account\");\r\n    console.log(account);\r\n    this.setState({ ownerAccount: account });\r\n\r\n    this.getAccountData();\r\n  };\r\n\r\n  logout = async () => {\r\n    localStorage.setItem(\"jwt-owner\", undefined);\r\n    // window.location.reload(false);\r\n    document.location.href = \"/\";\r\n  };\r\n\r\n  toggle = name => () => {\r\n    this.setState({ uploadDocumentFinished: false });\r\n    this.setState({ currentUploadType: name });\r\n    this.setState({ uploadDisabled: true });\r\n    this.setState({\r\n      modal: !this.state.modal\r\n    });\r\n  };\r\n\r\n  toggleDetail = name => () => {\r\n    this.setState({ currentDetailType: name });\r\n    this.setState({\r\n      detailModal: !this.state.detailModal\r\n    });\r\n  };\r\n\r\n  approveShareRequest = shareRequest => async () => {\r\n    console.log(\"sq\");\r\n    console.log(shareRequest);\r\n    let body = {\r\n      shareRequestId: shareRequest._id,\r\n      approved: true\r\n    };\r\n\r\n    // let sqRes = await axios.post(\r\n    //   this.props.urlBase + \"/api/approveShareRequest\",\r\n    //   body\r\n    // );\r\n    let sqRes = await axios.put(\r\n      this.props.urlBase +\r\n        \"/api/account/\" +\r\n        this.state.ownerAccount.id +\r\n        \"/share-requests/\",\r\n      body\r\n    );\r\n\r\n    console.log(sqRes);\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.loginAsOwner();\r\n    // let jwt = localStorage.getItem(\"jwt\");\r\n    // if (jwt !== undefined && jwt !== \"undefined\") {\r\n    //   axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + jwt;\r\n    //   this.setState({ loggedInAsOwner: true });\r\n    //   this.getAccountData();\r\n    // }\r\n  };\r\n\r\n  render() {\r\n    let mainContent;\r\n    let recordRows = [];\r\n\r\n    for (let document of this.state.documentTypes) {\r\n      let documentName = document.name;\r\n      let toggleDetailOrUpload = this.toggleDetail(documentName);\r\n      if (this.state.documentTypeToUrlMap[documentName] === undefined) {\r\n        toggleDetailOrUpload = this.toggle(documentName);\r\n      }\r\n\r\n      let sharedWith = (\r\n        <div class=\"text-center\" style={{ verticalAlign: \"bottom\" }}>\r\n          <p\r\n            style={{\r\n              color: \"#d3d3d3\",\r\n              marginLeft: \"auto\",\r\n              marginRight: \"auto\"\r\n            }}\r\n          >\r\n            -\r\n          </p>\r\n        </div>\r\n      );\r\n\r\n      for (let shareRequest of this.state.shareRequests) {\r\n        if (\r\n          shareRequest.documentType === document.name &&\r\n          shareRequest.approved === false\r\n        ) {\r\n          sharedWith = (\r\n            <div style={{ verticalAlign: \"bottom\", marginTop: \"30px\" }}>\r\n              <a onClick={toggleDetailOrUpload} href=\"#\">\r\n                <MDBIcon\r\n                  style={{\r\n                    width: \"50px\",\r\n                    display: \"block\",\r\n                    marginLeft: \"auto\",\r\n                    marginRight: \"auto\"\r\n                  }}\r\n                  size=\"3x\"\r\n                  icon=\"exclamation-circle\"\r\n                />\r\n              </a>\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n\r\n      recordRows.push(\r\n        <div>\r\n          <MDBRow>\r\n            <MDBCol size=\"4\">\r\n              <div style={{ verticalAlign: \"bottom\", marginTop: \"40px\" }}>\r\n                {this.state.documentTypeToUrlMap[documentName] === undefined ? (\r\n                  <MDBIcon\r\n                    onClick={toggleDetailOrUpload}\r\n                    style={{\r\n                      width: \"100px\",\r\n                      verticalAlign: \"middle\",\r\n                      paddingRight: \"30px\"\r\n                    }}\r\n                    icon=\"file\"\r\n                    size=\"4x\"\r\n                  />\r\n                ) : (\r\n                  <img\r\n                    onClick={toggleDetailOrUpload}\r\n                    src={this.state.documentTypeToUrlMap[documentName].url}\r\n                    style={{\r\n                      width: \"100px\",\r\n                      verticalAlign: \"middle\",\r\n                      paddingRight: \"30px\"\r\n                    }}\r\n                  />\r\n                )}\r\n\r\n                <a style={{ color: \"black\" }} href=\"#\">\r\n                  <span onClick={toggleDetailOrUpload}>{documentName}</span>\r\n                </a>\r\n              </div>\r\n            </MDBCol>\r\n            <MDBCol size=\"2\">{sharedWith}</MDBCol>\r\n            <MDBCol size=\"2\">\r\n              {/* <div style={{ marginTop: \"20px\" }}>\r\n                <img style={{ width: \"50px\", display: \"block\", marginLeft: \"auto\", marginRight: \"auto\" }} class=\"circular--square\" src=\"newimages/owner.png\" />\r\n              </div>\r\n              <div class=\"text-block-22\">Jan 9, 2020</div> */}\r\n\r\n              <div style={{ marginTop: \"40px\" }}>\r\n                <div\r\n                  style={{\r\n                    textAlign: \"center\",\r\n                    marginLeft: \"auto\",\r\n                    marginRight: \"auto\"\r\n                  }}\r\n                >\r\n                  {/* <div class=\"text-center\" style={{ verticalAlign: \"bottom\" }}>\r\n                    <p style={{ color: \"#d3d3d3\", marginLeft: \"auto\", marginRight: \"auto\" }}>Not Uploaded</p>\r\n                  </div> */}\r\n\r\n                  {this.state.documentTypeToUrlMap[documentName] ===\r\n                  undefined ? (\r\n                    <MDBBtn\r\n                      onClick={this.toggle(documentName)}\r\n                      color=\"mdb-color\"\r\n                    >\r\n                      Upload\r\n                    </MDBBtn>\r\n                  ) : (\r\n                    <div>\r\n                      <div\r\n                        style={{ verticalAlign: \"bottom\", marginTop: \"30px\" }}\r\n                      >\r\n                        <img\r\n                          style={{\r\n                            width: \"50px\",\r\n                            display: \"block\",\r\n                            marginLeft: \"auto\",\r\n                            marginRight: \"auto\"\r\n                          }}\r\n                          class=\"circular--square\"\r\n                          src=\"newimages/owner.png\"\r\n                        />\r\n                      </div>\r\n                      <p>\r\n                        {\r\n                          this.state.documentTypeToUrlMap[documentName]\r\n                            .createdAt\r\n                        }\r\n                      </p>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </MDBCol>\r\n            <MDBCol size=\"2\">\r\n              {/* <div style={{ marginTop: \"40px\" }}>\r\n                <div class=\"text-block-22\">June 4, 2023</div>\r\n              </div> */}\r\n              <div\r\n                class=\"text-center\"\r\n                style={{ verticalAlign: \"bottom\", marginTop: \"50px\" }}\r\n              >\r\n                <p style={{ marginLeft: \"auto\", marginRight: \"auto\" }}>-</p>\r\n              </div>\r\n            </MDBCol>\r\n            <MDBCol size=\"2\">\r\n              {/* <div style={{ marginTop: \"40px\" }}>\r\n                <MDBIcon style={{ width: \"50px\", display: \"block\", marginLeft: \"auto\", marginRight: \"auto\" }} icon=\"check-circle\" />\r\n              </div> */}\r\n\r\n              <div\r\n                class=\"text-center\"\r\n                style={{ verticalAlign: \"bottom\", marginTop: \"50px\" }}\r\n              >\r\n                <p style={{ marginLeft: \"auto\", marginRight: \"auto\" }}>-</p>\r\n              </div>\r\n            </MDBCol>\r\n          </MDBRow>\r\n\r\n          <hr></hr>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    let modal = (\r\n      <MDBModal\r\n        size=\"large\"\r\n        isOpen={this.state.modal}\r\n        toggle={this.toggle(\"\")}\r\n        centered\r\n      >\r\n        <MDBModalHeader toggle={this.toggle(\"\")}>\r\n          <p>\r\n            <MDBIcon far icon=\"file\" /> {\"   \"}Document Upload\r\n          </p>\r\n        </MDBModalHeader>\r\n\r\n        {this.state.uploadDocumentFinished === true ? (\r\n          <MDBAnimation type=\"flipInX\">\r\n            <h1 style={{ marginLeft: \"auto\", marginRight: \"auto\" }}>\r\n              Upload Finished\r\n            </h1>\r\n          </MDBAnimation>\r\n        ) : (\r\n          <div>\r\n            <MDBModalBody>\r\n              <div className=\"custom-file\">\r\n                <input\r\n                  onClick={this.fileSelected}\r\n                  type=\"file\"\r\n                  className=\"custom-file-input\"\r\n                  id=\"inputGroupFile01\"\r\n                  aria-describedby=\"inputGroupFileAddon01\"\r\n                />\r\n\r\n                <label className=\"custom-file-label\" htmlFor=\"inputGroupFile01\">\r\n                  Choose file\r\n                </label>\r\n              </div>\r\n            </MDBModalBody>\r\n            <MDBModalFooter>\r\n              <MDBBtn\r\n                disabled={this.state.uploadDisabled}\r\n                onClick={this.uploadDocument}\r\n                style={{\r\n                  display: \"block\",\r\n                  marginLeft: \"auto\",\r\n                  marginRight: \"auto\"\r\n                }}\r\n                color=\"primary\"\r\n              >\r\n                Save\r\n              </MDBBtn>\r\n            </MDBModalFooter>\r\n          </div>\r\n        )}\r\n      </MDBModal>\r\n    );\r\n\r\n    let documentDetailModal = (\r\n      <MDBModal\r\n        size=\"xl\"\r\n        isOpen={this.state.detailModal}\r\n        toggle={this.toggleDetail(\"\")}\r\n        centered\r\n      >\r\n        <MDBModalHeader toggle={this.toggleDetail(\"\")}>\r\n          <p>\r\n            <MDBIcon far icon=\"file\" /> {\"   \"}Document Details\r\n          </p>\r\n        </MDBModalHeader>\r\n        <MDBModalBody>\r\n          <DetailTabs\r\n            approveShareRequest={this.approveShareRequest}\r\n            deleteDocument={this.deleteDocument}\r\n            imgSrc={\r\n              this.state.documentTypeToUrlMap[this.state.currentDetailType]\r\n            }\r\n            ownerAccount={this.state.ownerAccount}\r\n            shareRequests={this.state.shareRequests}\r\n          />\r\n          {/* <img src={this.state.documentTypeToUrlMap[this.state.currentDetailType]} style={{ width: \"200px\", verticalAlign: \"middle\", paddingRight: \"30px\" }} /> */}\r\n        </MDBModalBody>\r\n      </MDBModal>\r\n    );\r\n\r\n    mainContent = (\r\n      <div>\r\n        {modal}\r\n        {documentDetailModal}\r\n        <MDBRow>\r\n          <MDBCol size=\"1\">\r\n            {/* Side bar */}\r\n            <div\r\n              class=\"div-block-68\"\r\n              style={{ width: \"100px\", height: \"1317px\" }}\r\n            >\r\n              <div>\r\n                <div class=\"div-block-36\">\r\n                  <div\r\n                    data-w-id=\"ddbc8949-2fc3-f476-97de-60228bd6fa89\"\r\n                    class=\"div-block-91\"\r\n                    style={{ width: \"90px\", height: \"80px\" }}\r\n                  ></div>\r\n                </div>\r\n              </div>\r\n              <div\r\n                data-w-id=\"fd40dfd9-11f3-d26b-9e05-bf6a430b3346\"\r\n                class=\"div-block-92\"\r\n              >\r\n                <div class=\"div-block-38\">\r\n                  <div class=\"div-block-37\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </MDBCol>\r\n          <MDBCol size=\"9\">\r\n            <div style={{ paddingTop: \"110px\" }}>\r\n              <div class=\"div-block-109\">\r\n                <h1 style={{ fontWeight: \"bold\" }} class=\"heading-3\">\r\n                  My Documents\r\n                </h1>\r\n              </div>\r\n            </div>\r\n            <hr></hr>\r\n            <MDBRow>\r\n              <MDBCol size=\"4\">\r\n                <div class=\"text-block-16 name\">NAME</div>\r\n              </MDBCol>\r\n              <MDBCol size=\"2\">\r\n                <div class=\"text-block-16\">SHARED WITH</div>\r\n              </MDBCol>\r\n              <MDBCol size=\"2\">\r\n                <div class=\"text-block-16\">UPLOADED</div>\r\n              </MDBCol>\r\n              <MDBCol size=\"2\">\r\n                <div class=\"text-block-16\">VALID UNTIL</div>\r\n              </MDBCol>\r\n              <MDBCol size=\"2\">\r\n                <div class=\"text-block-16\">NOTARIZED</div>\r\n              </MDBCol>\r\n            </MDBRow>\r\n            {recordRows}\r\n          </MDBCol>\r\n          <MDBCol size=\"2\">\r\n            <img\r\n              style={{ marginTop: \"47px\", width: \"50px\" }}\r\n              class=\"circular--square\"\r\n              src=\"newimages/owner.png\"\r\n            />\r\n            <p style={{ paddingLeft: \"3px\" }}>\r\n              <button onClick={this.logout} className=\"button-link\">\r\n                logout\r\n              </button>\r\n            </p>\r\n          </MDBCol>\r\n        </MDBRow>\r\n      </div>\r\n    );\r\n\r\n    return <div>{mainContent}</div>;\r\n  }\r\n}\r\n\r\nexport default OwnerWorkflow;\r\n","import React, { Component, Link } from \"react\";\r\nimport {\r\n  MDBContainer,\r\n  MDBRow,\r\n  MDBCol,\r\n  MDBInput,\r\n  MDBBtn,\r\n  MDBDropdown,\r\n  MDBDropdownToggle,\r\n  MDBDropdownMenu,\r\n  MDBDropdownItem\r\n} from \"mdbreact\";\r\nimport axios from \"axios\";\r\n\r\nclass Admin extends React.Component {\r\n  state = {\r\n    rolePerms: [],\r\n    submitPermissionsClicked: false,\r\n    disableSubmit: false\r\n  };\r\n\r\n  submitPermissions = async () => {\r\n    let body = {\r\n      rolePermissionTable: this.state.rolePerms\r\n    };\r\n\r\n    let res = await axios.post(\r\n      \"http://localhost:5000/api/admin/role-permission-table/\",\r\n      body\r\n    );\r\n\r\n    console.log(res.data);\r\n\r\n    this.setState({ submitPermissionsClicked: true });\r\n  };\r\n  buildPermissionTable = async () => {\r\n    let rolePermRes = await axios.get(\r\n      \"http://localhost:5000/api/admin/role-permission-table\"\r\n    );\r\n    console.log(\"roles\");\r\n    console.log(rolePermRes.data.rolePermissionTable);\r\n\r\n    if (\r\n      rolePermRes.data.rolePermissionTable === null ||\r\n      rolePermRes.data.rolePermissionTable === undefined ||\r\n      JSON.stringify(rolePermRes.data.rolePermissionTable) ===\r\n        JSON.stringify({})\r\n    ) {\r\n      let rolePermResDefault = await axios.get(\r\n        \"http://localhost:5000/api/admin/generate-default-role-permissions-table\"\r\n      );\r\n      console.log(\"default tabe\");\r\n      console.log(rolePermResDefault.data.rolePermissionTable);\r\n\r\n      if (\r\n        JSON.stringify(rolePermResDefault.data.rolePermissionTable) ===\r\n        JSON.stringify({})\r\n      ) {\r\n        this.setState({ disableSubmit: true });\r\n      }\r\n\r\n      this.setState({\r\n        rolePerms: rolePermResDefault.data.rolePermissionTable\r\n      });\r\n    } else {\r\n      this.setState({\r\n        rolePerms: rolePermRes.data.rolePermissionTable\r\n      });\r\n    }\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.buildPermissionTable();\r\n  };\r\n\r\n  checkBoxChanged = e => {\r\n    console.log(e.target.id);\r\n    console.log(e.target.checked);\r\n    console.log(e.target.name);\r\n    this.state.rolePerms[e.target.id] = e.target.checked;\r\n\r\n    let rolePerms = this.state.rolePerms;\r\n\r\n    rolePerms[e.target.id] = e.target.checked;\r\n\r\n    this.setState({ rolePerms: rolePerms });\r\n  };\r\n  render() {\r\n    // console.log(\"admin\");\r\n\r\n    let checkBoxes = [];\r\n    let roleDefault = \"-\";\r\n\r\n    console.log(\"RENDER\");\r\n    console.log(this.state.rolePerms);\r\n    for (var key of Object.keys(this.state.rolePerms)) {\r\n      console.log(key + \" -> \" + this.state.rolePerms[key]);\r\n      checkBoxes.push(\r\n        <div>\r\n          <MDBInput\r\n            onChange={this.checkBoxChanged}\r\n            label={key}\r\n            filled\r\n            checked={this.state.rolePerms[key]}\r\n            type=\"checkbox\"\r\n            id={key}\r\n          />\r\n          <hr />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    let welcomeMessage = <h3>Welcome!</h3>;\r\n\r\n    if (this.state.disableSubmit === true) {\r\n      welcomeMessage = (\r\n        <div>\r\n          <h3>No roles or permissions found!</h3>\r\n          <p>\r\n            Please update roles and permissions with the post: /api/permissions/\r\n            and post: /api/roles/ endpoints\r\n          </p>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <MDBContainer style={{ paddingTop: \"100px\" }}>\r\n        {this.state.submitPermissionsClicked === false ? (\r\n          <div>\r\n            <MDBRow>\r\n              <MDBCol></MDBCol>\r\n              <MDBCol>{welcomeMessage}</MDBCol>\r\n              <MDBCol></MDBCol>\r\n            </MDBRow>\r\n            <MDBRow>\r\n              <MDBCol></MDBCol>\r\n              <MDBCol>{checkBoxes}</MDBCol>\r\n              <MDBCol></MDBCol>\r\n            </MDBRow>\r\n            <MDBRow>\r\n              <MDBCol></MDBCol>\r\n              <MDBCol>\r\n                <MDBBtn\r\n                  onClick={this.submitPermissions}\r\n                  disabled={this.state.disableSubmit}\r\n                >\r\n                  Submit Permissions\r\n                </MDBBtn>\r\n              </MDBCol>\r\n              <MDBCol></MDBCol>\r\n            </MDBRow>\r\n          </div>\r\n        ) : (\r\n          <h1>Permissions Updated!</h1>\r\n        )}\r\n      </MDBContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Admin;\r\n","import React, { Component, Link } from \"react\";\r\n\r\nimport Autosuggest from \"react-autosuggest\";\r\nvar AutosuggestHighlightMatch = require(\"autosuggest-highlight/match\");\r\nvar AutosuggestHighlightParse = require(\"autosuggest-highlight/parse\");\r\n\r\n// const people = [\r\n//   {\r\n//     first: \"Sally\",\r\n//     last: \"Owner\"\r\n//   },\r\n//   {\r\n//     first: \"Charlotte\",\r\n//     last: \"White\"\r\n//   },\r\n//   {\r\n//     first: \"Chloe\",\r\n//     last: \"Jones\"\r\n//   },\r\n//   {\r\n//     first: \"Cooper\",\r\n//     last: \"King\"\r\n//   }\r\n// ];\r\n\r\n// https://developer.mozilla.org/en/docs/Web/JavaScript/Guide/Regular_Expressions#Using_Special_Characters\r\nfunction escapeRegexCharacters(str) {\r\n  return str.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\r\n}\r\n\r\nfunction getSuggestions(value, ownerAccountsForSearch) {\r\n  const escapedValue = escapeRegexCharacters(value.trim());\r\n\r\n  if (escapedValue === \"\") {\r\n    return [];\r\n  }\r\n\r\n  const regex = new RegExp(\"\\\\b\" + escapedValue, \"i\");\r\n\r\n  return ownerAccountsForSearch.filter(person => regex.test(getSuggestionValue(person)));\r\n}\r\n\r\nfunction getSuggestionValue(suggestion) {\r\n  return `${suggestion.first} ${suggestion.last}`;\r\n}\r\n\r\nfunction renderSuggestion(suggestion, { query }) {\r\n  const suggestionText = `${suggestion.first} ${suggestion.last}`;\r\n  const matches = AutosuggestHighlightMatch(suggestionText, query);\r\n  const parts = AutosuggestHighlightParse(suggestionText, matches);\r\n\r\n  return (\r\n    // background-image: url(https://s3.amazonaws.com/uifaces/faces/twitter/steveodom/48.jpg);\r\n    // suggestion.url\r\n    <span className={\"suggestion-content\"} style={{ backgroundSize: \"50px\", backgroundImage: \"url(\" + suggestion.imgSrc + \")\" }}>\r\n      <span className=\"name\">\r\n        {parts.map((part, index) => {\r\n          const className = part.highlight ? \"highlight\" : null;\r\n\r\n          return (\r\n            <span className={className} key={index}>\r\n              {part.text}\r\n            </span>\r\n          );\r\n        })}\r\n      </span>\r\n    </span>\r\n  );\r\n}\r\n\r\n// https://react-autosuggest.js.org/\r\nclass SearchBar extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      value: \"\",\r\n      suggestions: [],\r\n      mypassAccounts: []\r\n    };\r\n  }\r\n\r\n  onChange = (event, { newValue, method }) => {\r\n    this.setState({\r\n      value: newValue\r\n    });\r\n  };\r\n\r\n  onSuggestionSelected = (event, { suggestion, suggestionValue, suggestionIndex, sectionIndex, method }) => {\r\n    console.log(suggestion);\r\n    console.log(event);\r\n\r\n    this.props.ownerSelectedFromDropdown(suggestion);\r\n\r\n    // this.props.history.push(\"/\");\r\n    // this.props.history.push(\r\n    //   \"/profile/\" +\r\n    //     suggestion.last\r\n    //       .toLowerCase()\r\n    //       .split(\" \")\r\n    //       .join(\"\") +\r\n    //     \"-\" +\r\n    //     suggestion.first\r\n    //       .toLowerCase()\r\n    //       .split(\" \")\r\n    //       .join(\"\") +\r\n    //     \"-\" +\r\n    //     suggestion.schoolName\r\n    //       .toLowerCase()\r\n    //       .split(\" \")\r\n    //       .join(\"\")\r\n    // );\r\n  };\r\n  onSuggestionsFetchRequested = ({ value }) => {\r\n    this.setState({\r\n      suggestions: getSuggestions(value, this.props.ownerAccountsForSearch)\r\n    });\r\n  };\r\n\r\n  onSuggestionsClearRequested = () => {\r\n    this.setState({\r\n      suggestions: []\r\n    });\r\n  };\r\n\r\n  onComponentDidMount = () => {\r\n    console.log(\"hi\");\r\n    // this.getAllAccounts();\r\n  };\r\n\r\n  render() {\r\n    const { value, suggestions } = this.state;\r\n    const inputProps = {\r\n      placeholder: \"Search for owner\",\r\n      value,\r\n      onChange: this.onChange\r\n    };\r\n\r\n    return (\r\n      <Autosuggest\r\n        suggestions={suggestions}\r\n        onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\r\n        onSuggestionsClearRequested={this.onSuggestionsClearRequested}\r\n        getSuggestionValue={getSuggestionValue}\r\n        onSuggestionSelected={this.onSuggestionSelected}\r\n        renderSuggestion={renderSuggestion}\r\n        inputProps={inputProps}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBar;\r\n","import React, { Component, Link } from \"react\";\r\nimport {\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBModalFooter,\r\n  MDBAlert,\r\n  MDBContainer,\r\n  MDBIcon,\r\n  MDBRow,\r\n  MDBCol,\r\n  MDBInput,\r\n  MDBBtn,\r\n  MDBDropdown,\r\n  MDBDropdownToggle,\r\n  MDBDropdownMenu,\r\n  MDBDropdownItem,\r\n  MDBAnimation\r\n} from \"mdbreact\";\r\nimport axios from \"axios\";\r\nimport DetailTabs from \"./detailTabs\";\r\nimport moment from \"moment\";\r\nimport SearchBar from \"./searchbar\";\r\n\r\nclass CaseWorkerWorkflow extends React.Component {\r\n  state = {\r\n    caseWorkerAccount: {},\r\n    loggedInAsCaseWorker: true,\r\n    uploadDocumentFinished: false,\r\n    ownerAccountsForSearch: [],\r\n    ownerAccounts: [],\r\n    selectedAccout: {},\r\n    uploadModal: false,\r\n    availableDocumentTypes: [],\r\n    requestClickedForTypes: {},\r\n    shareRequests: [],\r\n    allDocumentTypes: [],\r\n    currentUploadType: \"Birth Certificate\",\r\n    notarizationTypes: [\"Certified Copy\", \"Affirmation\"],\r\n    currentNotirizationType: \"Certified Copy\",\r\n    ownerSig: \"example-sig\",\r\n    notaryInfo: \"example-notary-info\",\r\n    pem: \"example-pem\",\r\n    requestButtonClicked: false,\r\n    uploadOnBehalfResponseVC: undefined,\r\n    uploadOnBehalfResponseVP: undefined\r\n  };\r\n\r\n  toggleUploadModal = () => {\r\n    this.setState({\r\n      uploadModal: !this.state.uploadModal\r\n    });\r\n  };\r\n\r\n  requestDocument = name => async () => {\r\n    console.log(\"request doc\");\r\n    let body = {\r\n      shareRequest: {\r\n        accountId: this.state.selectedAccout._id,\r\n        documentType: name\r\n      }\r\n    };\r\n\r\n    // \"/api/account/\" + found._id + \"/document-types\"\r\n    // let res = await axios.post(this.props.urlBase + \"/api/shareRequest/\", body);\r\n    let res = await axios.post(\r\n      this.props.urlBase +\r\n        \"/api/account/\" +\r\n        this.state.selectedAccout._id +\r\n        \"/share-requests\",\r\n      body\r\n    );\r\n\r\n    console.log(res);\r\n\r\n    this.setState({ requestButtonClicked: true });\r\n\r\n    let rcft = this.state.requestClickedForTypes;\r\n\r\n    rcft[name] = true;\r\n    this.setState({ requestClickedForTypes: rcft });\r\n  };\r\n\r\n  fileSelected = () => {\r\n    this.setState({ uploadDisabled: false });\r\n  };\r\n\r\n  getAllAccounts = async () => {\r\n    console.log(\"get accounts\");\r\n    let res = await axios.get(this.props.urlBase + \"/api/accounts/\");\r\n    console.log(res.data);\r\n    let ownerAccountsForSearch = [];\r\n    for (let account of res.data) {\r\n      if (account.role === \"owner\") {\r\n        let imgSrc = \"newimages/anon-user.png\";\r\n        if (account.username === \"sallyowner\") {\r\n          imgSrc = \"newimages/owner.png\";\r\n        }\r\n        let ownerAccount = {\r\n          first: account.username,\r\n          last: account.role,\r\n          imgSrc: imgSrc,\r\n          id: account._id\r\n        };\r\n        ownerAccountsForSearch.push(ownerAccount);\r\n      }\r\n    }\r\n\r\n    this.setState({ ownerAccountsForSearch: ownerAccountsForSearch });\r\n    this.setState({ ownerAccounts: res.data });\r\n\r\n    let docTypes = await axios.get(this.props.urlBase + \"/api/document-types/\");\r\n    console.log(\"doc types!\");\r\n    console.log(docTypes.data.documentTypes);\r\n    this.setState({ allDocumentTypes: docTypes.data.documentTypes });\r\n  };\r\n\r\n  getAccountData = async () => {\r\n    // let res = await axios.get(this.props.urlBase + \"/api/documenttypes/\");\r\n    // console.log(res);\r\n    // this.setState({ documentTypes: res.data.documentTypes });\r\n    // this.getDocuments();\r\n  };\r\n\r\n  ownerSelectedFromDropdown = async owner => {\r\n    console.log(\"from dropdown\");\r\n    console.log(owner);\r\n\r\n    const found = this.state.ownerAccounts.find(\r\n      element => element._id === owner.id\r\n    );\r\n    console.log(found);\r\n    this.setState({ selectedAccout: found });\r\n\r\n    const documentTypes = [];\r\n    let res = await axios.get(\r\n      this.props.urlBase + \"/api/account/\" + found._id + \"/document-types\"\r\n    );\r\n\r\n    let sqRes = await axios.get(\r\n      this.props.urlBase + \"/api/account/\" + found._id + \"/share-requests\"\r\n    );\r\n\r\n    this.setState({ shareRequests: sqRes.data });\r\n\r\n    console.log(res.data);\r\n    this.setState({ availableDocumentTypes: res.data });\r\n  };\r\n\r\n  // uploadDocument = async () => {\r\n  //   this.setState({ uploadDocumentFinished: true });\r\n  //   const file = document.getElementById(\"inputGroupFile01\").files;\r\n  //   const formData = new FormData();\r\n  //   formData.append(\"img\", file[0]);\r\n  //   formData.append(\"type\", this.state.currentUploadType);\r\n\r\n  //   if (\r\n  //     this.state.uploadForAccountName !== undefined &&\r\n  //     this.state.uploadForAccountId !== undefined\r\n  //   ) {\r\n  //     formData.append(\"uploadForAccountName\", this.state.uploadForAccountName);\r\n  //     formData.append(\"uploadForAccountId\", this.state.uploadForAccountId);\r\n\r\n  //     let res = await fetch(\r\n  //       this.props.urlBase + \"/api/uploadDocumentOnBehalfOfUser/\",\r\n  //       {\r\n  //         method: \"POST\",\r\n  //         headers: {\r\n  //           authorization: \"Token \" + localStorage.getItem(\"jwt-caseworker\")\r\n  //         },\r\n  //         body: formData\r\n  //       }\r\n  //     );\r\n  //   } else {\r\n  //     let res = await fetch(this.props.urlBase + \"/api/documents/\", {\r\n  //       method: \"POST\",\r\n  //       headers: {\r\n  //         authorization: \"Token \" + localStorage.getItem(\"jwt-caseworker\")\r\n  //       },\r\n  //       body: formData\r\n  //     });\r\n  //   }\r\n\r\n  //   // this.setState({ uploadDocumentFinished: true });\r\n  //   this.getDocuments();\r\n  // };\r\n\r\n  uploadAndNotarizeDocument = async () => {\r\n    this.setState({ uploadDocumentFinished: true });\r\n    const file = document.getElementById(\"inputGroupFile01\").files;\r\n    const file2 = document.getElementById(\"inputGroupFile02\").files;\r\n\r\n    let files = [];\r\n    files.push(file[0]);\r\n    files.push(file2[0]);\r\n    const formData = new FormData();\r\n    // formData.append(\"document\", file[0]);\r\n    // formData.append(\"seal\", file2[0]);\r\n    formData.append(\"img\", file[0]);\r\n    formData.append(\"img\", file2[0]);\r\n\r\n    formData.append(\"type\", this.state.currentUploadType);\r\n    formData.append(\"notarizationType\", this.state.currentNotirizationType);\r\n    formData.append(\"notaryInfo\", this.state.notaryInfo);\r\n    formData.append(\"signature\", this.state.ownerSig);\r\n    formData.append(\"pem\", this.state.pem);\r\n\r\n    // formData.append(\"uploadForAccountName\", this.state.uploadForAccountName);\r\n    console.log(this.state.selectedAccout);\r\n    formData.append(\"uploadForAccountId\", this.state.selectedAccout._id);\r\n\r\n    console.log(formData.values());\r\n    let res = await fetch(\r\n      this.props.urlBase +\r\n        \"/api/upload-document-and-notarize-on-behalf-of-user/\",\r\n      {\r\n        method: \"POST\",\r\n        headers: {\r\n          authorization: \"Token \" + localStorage.getItem(\"jwt-caseworker\")\r\n        },\r\n        body: formData\r\n      }\r\n    );\r\n\r\n    console.log(\"response!\");\r\n    // console.log(res);\r\n\r\n    // console.log(await res.json());\r\n\r\n    let jsonRes = await res.json();\r\n    console.log(jsonRes);\r\n\r\n    this.setState({ uploadOnBehalfResponseVC: JSON.stringify(jsonRes.vc) });\r\n    this.setState({ uploadOnBehalfResponseVP: JSON.stringify(jsonRes.vp) });\r\n\r\n    // this.setState({ uploadDocumentFinished: true });\r\n    // this.getDocuments();\r\n  };\r\n\r\n  getDocuments = async () => {\r\n    let documentsRes = await axios.get(this.props.urlBase + \"/api/documents/\");\r\n    let documents = documentsRes.data.documents;\r\n    console.log(\"documents:\");\r\n    console.log(documents);\r\n    let documentTypeToUrlMap = {};\r\n\r\n    for (var i = 0; i < documents.length; i++) {\r\n      let documentUrl =\r\n        this.props.urlBase + \"/api/documents/\" + documents[i].url;\r\n      let date = moment(documents[i].createdAt);\r\n      let humanReadable = date.format(\"MMM Do YYYY\");\r\n      let docObject = { createdAt: humanReadable, url: documentUrl };\r\n      let type = documents[i].type;\r\n      documentTypeToUrlMap[type] = docObject;\r\n    }\r\n\r\n    this.setState({ documentTypeToUrlMap: documentTypeToUrlMap });\r\n  };\r\n\r\n  loginAsCaseWorker = async () => {\r\n    this.setState({ loggedInAsOwner: true });\r\n    let body = {\r\n      account: {\r\n        email: \"caseworker@caseworker.com\",\r\n        password: \"caseworker\"\r\n      }\r\n    };\r\n\r\n    let loginRes = await axios.post(\r\n      this.props.urlBase + \"/api/accounts/login\",\r\n      body\r\n    );\r\n\r\n    let account = loginRes.data.account;\r\n\r\n    axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + account.token;\r\n    localStorage.setItem(\"jwt-caseworker\", account.token);\r\n\r\n    this.setState({ caseWorkerAccount: account });\r\n    // this.getAccountData();\r\n    await this.getAllAccounts();\r\n  };\r\n\r\n  logout = async () => {\r\n    localStorage.setItem(\"jwt-caseworker\", undefined);\r\n    document.location.href = \"/\";\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.loginAsCaseWorker();\r\n  };\r\n\r\n  signatureChange = e => {\r\n    this.setState({ ownerSig: e.target.value });\r\n  };\r\n\r\n  notaryInfoChange = e => {\r\n    this.setState({ notaryInfo: e.target.value });\r\n  };\r\n\r\n  pemInfoChange = e => {\r\n    this.setState({ pem: e.target.value });\r\n  };\r\n\r\n  notirizationTypeChange = e => {\r\n    this.setState({ currentNotirizationType: e.target.value });\r\n  };\r\n\r\n  documentTypeChange = e => {\r\n    this.setState({ currentUploadType: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    let selectedOwnerLeftView;\r\n    let selectedOwnerRightView;\r\n\r\n    let ownerAvailableDocumentTypes = [];\r\n\r\n    for (let documentType of this.state.availableDocumentTypes) {\r\n      let requestButton = (\r\n        <MDBBtn onClick={this.requestDocument(documentType)} color=\"mdb-color\">\r\n          Request\r\n        </MDBBtn>\r\n      );\r\n\r\n      for (let shareRequest of this.state.shareRequests) {\r\n        if (\r\n          shareRequest.documentType === documentType &&\r\n          shareRequest.shareWithAccountId === this.state.caseWorkerAccount.id &&\r\n          shareRequest.approved === false\r\n        ) {\r\n          requestButton = (\r\n            <MDBBtn\r\n              disabled\r\n              onClick={this.requestDocument(documentType)}\r\n              color=\"mdb-color\"\r\n            >\r\n              Requested\r\n            </MDBBtn>\r\n          );\r\n        } else if (\r\n          shareRequest.documentType === documentType &&\r\n          shareRequest.shareWithAccountId === this.state.caseWorkerAccount.id &&\r\n          shareRequest.approved === true\r\n        ) {\r\n          // requestButton = <MDBIcon icon=\"check\" />;\r\n          let imgSrc =\r\n            \"http://localhost:5000/api/documents/\" +\r\n            shareRequest.documentUrl +\r\n            \"/\" +\r\n            window.localStorage.getItem(\"jwt-caseworker\");\r\n          requestButton = <img src={imgSrc} />;\r\n        }\r\n      }\r\n\r\n      console.log(\"this.state.requestClickedForTypes[documentType]\");\r\n      console.log(documentType);\r\n      console.log(this.state.requestClickedForTypes[documentType]);\r\n      if (this.state.requestClickedForTypes[documentType] == true) {\r\n        requestButton = (\r\n          <MDBBtn\r\n            disabled\r\n            onClick={this.requestDocument(documentType)}\r\n            color=\"mdb-color\"\r\n          >\r\n            Requested\r\n          </MDBBtn>\r\n        );\r\n      }\r\n\r\n      // if(shareRequest.approved === false)\r\n      ownerAvailableDocumentTypes.push(\r\n        <div>\r\n          <MDBRow>\r\n            <MDBCol>\r\n              <h5>{documentType}</h5>\r\n            </MDBCol>\r\n            <MDBCol>{requestButton}</MDBCol>\r\n            <hr></hr>\r\n          </MDBRow>\r\n        </div>\r\n      );\r\n    }\r\n    let ownerImage;\r\n\r\n    if (this.state.selectedAccout.username === \"sallyowner\") {\r\n      ownerImage = (\r\n        <img\r\n          style={{ margin: \"47px\", width: \"450px\" }}\r\n          class=\"circular--square\"\r\n          src=\"newimages/owner.png\"\r\n        />\r\n      );\r\n    } else {\r\n      ownerImage = (\r\n        <img\r\n          style={{ margin: \"47px\", width: \"450px\" }}\r\n          class=\"circular--square\"\r\n          src=\"newimages/anon-user.png\"\r\n        />\r\n      );\r\n    }\r\n\r\n    if (this.state.selectedAccout.username !== undefined) {\r\n      selectedOwnerLeftView = (\r\n        <div style={{ textAlign: \"center\", marginTop: \"100px\" }}>\r\n          <h2>{this.state.selectedAccout.username}</h2>\r\n          {ownerImage}\r\n          <h5>\r\n            Upload a document for owner: {this.state.selectedAccout.username}\r\n          </h5>\r\n          <MDBBtn onClick={this.toggleUploadModal} color=\"mdb-color\">\r\n            Upload\r\n          </MDBBtn>\r\n        </div>\r\n      );\r\n\r\n      selectedOwnerRightView = (\r\n        <div style={{ textAlign: \"center\", marginTop: \"100px\" }}>\r\n          <h2>Documents in MyPass</h2>\r\n          <hr></hr>\r\n          {ownerAvailableDocumentTypes}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    var selectDocumentTypes = (\r\n      <select onChange={this.documentTypeChange}>\r\n        {this.state.allDocumentTypes.map((x, y) => (\r\n          <option key={y.name}>{x.name}</option>\r\n        ))}\r\n      </select>\r\n    );\r\n\r\n    var notarizationTypes = (\r\n      <select onChange={this.notirizationTypeChange}>\r\n        {this.state.notarizationTypes.map((x, y) => (\r\n          <option key={y}>{x}</option>\r\n        ))}\r\n      </select>\r\n    );\r\n\r\n    let loadingOrReady = (\r\n      <div className=\"spinner-border text-primary\" role=\"status\">\r\n        <span className=\"sr-only\">Loading...</span>\r\n      </div>\r\n    );\r\n\r\n    if (this.state.uploadOnBehalfResponseVC !== undefined) {\r\n      loadingOrReady = (\r\n        <div>\r\n          <h5>Verifiable Credential</h5>\r\n          <p>{this.state.uploadOnBehalfResponseVC}</p>\r\n          <h5>Verifiable Presentation</h5>\r\n          <p>{this.state.uploadOnBehalfResponseVP}</p>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    let uploadDetailModal = (\r\n      <MDBModal\r\n        size=\"m\"\r\n        isOpen={this.state.uploadModal}\r\n        toggle={this.toggleUploadModal}\r\n        centered\r\n      >\r\n        <MDBModalHeader toggle={this.toggleUploadModal}>\r\n          <p>\r\n            <MDBIcon far icon=\"file\" /> Upload Document On Behalf Of User\r\n          </p>\r\n        </MDBModalHeader>\r\n        <MDBModalBody style={{ textAlign: \"center\" }}>\r\n          {this.state.uploadDocumentFinished === false ? (\r\n            <div>\r\n              <h5 style={{ paddingTop: \"50px\" }}>\r\n                Upload a document for owner:{\" \"}\r\n                {this.state.selectedAccout.username}\r\n              </h5>\r\n              <div className=\"custom-file\">\r\n                <input\r\n                  onClick={this.fileSelected}\r\n                  type=\"file\"\r\n                  id=\"inputGroupFile01\"\r\n                  aria-describedby=\"inputGroupFileAddon01\"\r\n                />\r\n              </div>{\" \"}\r\n              <h5 style={{ paddingTop: \"50px\" }}>\r\n                What type of document is this?\r\n              </h5>\r\n              {selectDocumentTypes}\r\n              <h5 style={{ paddingTop: \"50px\" }}>\r\n                What type of notarization is this?\r\n              </h5>\r\n              {notarizationTypes}\r\n              <MDBInput\r\n                style={{ paddingTop: \"50px\" }}\r\n                onChange={this.signatureChange}\r\n                type=\"textarea\"\r\n                label=\"Owner Signature\"\r\n                rows=\"1\"\r\n              />\r\n              <MDBInput\r\n                style={{ paddingTop: \"50px\" }}\r\n                onChange={this.notaryInfoChange}\r\n                type=\"textarea\"\r\n                label=\"Notary Info\"\r\n                rows=\"1\"\r\n              />\r\n              <h5 style={{ paddingTop: \"50px\" }}>Attach your seal: </h5>\r\n              <div className=\"custom-file\">\r\n                <input\r\n                  onClick={this.fileSelected}\r\n                  type=\"file\"\r\n                  id=\"inputGroupFile02\"\r\n                  aria-describedby=\"inputGroupFileAddon02\"\r\n                />\r\n              </div>\r\n              <MDBInput\r\n                style={{ paddingTop: \"50px\" }}\r\n                onChange={this.pemInfoChange}\r\n                type=\"textarea\"\r\n                label=\"PEM Signing Key\"\r\n                rows=\"1\"\r\n              />\r\n              <MDBBtn onClick={this.uploadAndNotarizeDocument}>\r\n                Notarize and Upload\r\n              </MDBBtn>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              {loadingOrReady}\r\n              {/* <h5>Verifiable Credential</h5>\r\n              <p>{this.state.uploadOnBehalfResponseVC}</p>\r\n              <h5>Verifiable Presentation</h5>\r\n              <p>{this.state.uploadOnBehalfResponseVP}</p> */}\r\n            </div>\r\n          )}\r\n        </MDBModalBody>\r\n      </MDBModal>\r\n    );\r\n    return (\r\n      <div>\r\n        {uploadDetailModal}\r\n        <MDBRow>\r\n          <MDBCol size=\"1\">\r\n            {/* Side bar */}\r\n            <div\r\n              class=\"div-block-68\"\r\n              style={{ width: \"100px\", height: \"1317px\" }}\r\n            >\r\n              <div>\r\n                <div class=\"div-block-36\">\r\n                  <div\r\n                    data-w-id=\"ddbc8949-2fc3-f476-97de-60228bd6fa89\"\r\n                    class=\"div-block-91\"\r\n                    style={{ width: \"90px\", height: \"80px\" }}\r\n                  ></div>\r\n                </div>\r\n              </div>\r\n              <div\r\n                data-w-id=\"fd40dfd9-11f3-d26b-9e05-bf6a430b3346\"\r\n                class=\"div-block-92\"\r\n              >\r\n                <div class=\"div-block-38\">\r\n                  <div class=\"div-block-37\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </MDBCol>\r\n          <MDBCol size=\"9\">\r\n            <div style={{ paddingTop: \"110px\" }}>\r\n              <div class=\"div-block-109\">\r\n                <h1 style={{ fontWeight: \"bold\" }} class=\"heading-3\">\r\n                  MyPass\r\n                </h1>\r\n              </div>\r\n            </div>\r\n            <hr></hr>\r\n\r\n            <MDBRow>\r\n              <MDBCol>\r\n                <div style={{ textAlign: \"center\" }}>\r\n                  <SearchBar\r\n                    ownerSelectedFromDropdown={this.ownerSelectedFromDropdown}\r\n                    ownerAccountsForSearch={this.state.ownerAccountsForSearch}\r\n                  />\r\n                </div>\r\n              </MDBCol>\r\n            </MDBRow>\r\n\r\n            <MDBRow>\r\n              <MDBCol>{selectedOwnerLeftView}</MDBCol>\r\n              <MDBCol>{selectedOwnerRightView}</MDBCol>\r\n            </MDBRow>\r\n          </MDBCol>\r\n          <MDBCol size=\"2\">\r\n            <img\r\n              style={{ marginTop: \"47px\", width: \"50px\" }}\r\n              class=\"circular--square\"\r\n              src=\"newimages/caseworkerlower.png\"\r\n            />\r\n            <p style={{ paddingLeft: \"3px\" }}>\r\n              <button onClick={this.logout} className=\"button-link\">\r\n                logout\r\n              </button>\r\n            </p>\r\n          </MDBCol>\r\n        </MDBRow>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CaseWorkerWorkflow;\r\n","import React, { Component, Link } from \"react\";\r\nimport {\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBModalFooter,\r\n  MDBAlert,\r\n  MDBContainer,\r\n  MDBIcon,\r\n  MDBRow,\r\n  MDBCol,\r\n  MDBInput,\r\n  MDBBtn,\r\n  MDBDropdown,\r\n  MDBDropdownToggle,\r\n  MDBDropdownMenu,\r\n  MDBDropdownItem,\r\n  MDBAnimation\r\n} from \"mdbreact\";\r\nimport axios from \"axios\";\r\nimport DetailTabs from \"./detailTabs\";\r\nimport moment from \"moment\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nclass ChooseWorkflow extends React.Component {\r\n  loginAsOwner = async () => {\r\n    this.props.history.push(\"/owner\");\r\n  };\r\n\r\n  loginAsCaseWorker = async () => {\r\n    this.props.history.push(\"/caseworker\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <MDBRow>\r\n          <MDBCol></MDBCol>\r\n          <MDBCol>\r\n            <img\r\n              style={{\r\n                marginTop: \"300px\",\r\n                width: \"350px\",\r\n                display: \"block\",\r\n                marginLeft: \"auto\",\r\n                marginRight: \"auto\"\r\n              }}\r\n              src=\"./newimages/mypass-logo.png\"\r\n            ></img>\r\n            <MDBRow>\r\n              <MDBCol>\r\n                <div style={{ marginTop: \"100px\" }}>\r\n                  <img\r\n                    style={{\r\n                      width: \"70px\",\r\n                      display: \"block\",\r\n                      marginLeft: \"auto\",\r\n                      marginRight: \"auto\"\r\n                    }}\r\n                    class=\"circular--square\"\r\n                    src=\"newimages/owner.png\"\r\n                  />\r\n                  <MDBBtn\r\n                    onClick={this.loginAsOwner}\r\n                    style={{\r\n                      display: \"block\",\r\n                      marginLeft: \"auto\",\r\n                      marginRight: \"auto\"\r\n                    }}\r\n                    color=\"primary\"\r\n                  >\r\n                    Login As Owner\r\n                  </MDBBtn>\r\n                </div>\r\n              </MDBCol>\r\n              <MDBCol>\r\n                <div style={{ marginTop: \"100px\" }}>\r\n                  <img\r\n                    style={{\r\n                      width: \"70px\",\r\n                      display: \"block\",\r\n                      marginLeft: \"auto\",\r\n                      marginRight: \"auto\"\r\n                    }}\r\n                    class=\"circular--square\"\r\n                    src=\"newimages/caseworkerlower.png\"\r\n                  />\r\n                  <MDBBtn\r\n                    onClick={this.loginAsCaseWorker}\r\n                    style={{\r\n                      display: \"block\",\r\n                      marginLeft: \"auto\",\r\n                      marginRight: \"auto\"\r\n                    }}\r\n                    color=\"primary\"\r\n                  >\r\n                    Login As Case Worker\r\n                  </MDBBtn>\r\n                </div>\r\n              </MDBCol>\r\n            </MDBRow>\r\n          </MDBCol>\r\n          <MDBCol></MDBCol>\r\n        </MDBRow>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChooseWorkflow;\r\n","import React, { Component, Link } from \"react\";\r\nimport {\r\n  MDBContainer,\r\n  MDBRow,\r\n  MDBCol,\r\n  MDBInput,\r\n  MDBBtn,\r\n  MDBDropdown,\r\n  MDBDropdownToggle,\r\n  MDBDropdownMenu,\r\n  MDBDropdownItem,\r\n  MDBIcon\r\n} from \"mdbreact\";\r\nimport axios from \"axios\";\r\n\r\nimport { verifyCredential } from \"did-jwt-vc\";\r\nimport { Resolver } from \"did-resolver\";\r\nimport { getResolver } from \"ethr-did-resolver\";\r\n\r\nconst providerConfig = {\r\n  name: \"rsk:testnet\",\r\n  registry: \"0xdca7ef03e98e0dc2b855be647c39abe984fcf21b\",\r\n  rpcUrl: \"https://did.testnet.rsk.co:4444\"\r\n};\r\n\r\nclass Verify extends React.Component {\r\n  state = {\r\n    error: undefined,\r\n    resolver: undefined,\r\n    verifiedVC: undefined,\r\n    signerMatches: false,\r\n    verifiedSigner: \"0x2a6F1D5083fb19b9f2C653B598abCb5705eD0439\",\r\n    jwt:\r\n      \"eyJ0eXAiOiJKV1QiLCJhbGciOiJFUzI1NkstUiJ9.eyJpYXQiOjE1ODI4MjA4MDYsInN1YiI6ImRpZDpldGhyOjB4NmVmZWRlYWVjMjBlNzkwNzEyNTFmZmZhNjU1RjFiZERDYTY1YzAyNyIsIm5iZiI6MTU4MjgyMDgwNiwidmMiOnsiQGNvbnRleHQiOlsiaHR0cHM6Ly93d3cudzMub3JnLzIwMTgvY3JlZGVudGlhbHMvdjEiXSwidHlwZSI6WyJWZXJpZmlhYmxlQ3JlZGVudGlhbCJdLCJjcmVkZW50aWFsU3ViamVjdCI6eyJkb2N1bWVudCI6eyJ0eXBlIjoiQmlydGggQ2VydGlmaWNhdGUiLCJoYXNoIjoiZTlmNWMzOGYwODk2N2U4NDEzODc3NWY3OGYwNTg5N2EiLCJ1cmxIYXNoIjoiYWZjNTZlN2ZiMzUxODBiZjZkOGQ4YzIzZDM3MmM1NTAifSwibm90YXJpemF0aW9uIjp7InNlYWxIYXNoIjoiZTlmNWMzOGYwODk2N2U4NDEzODc3NWY3OGYwNTg5N2EiLCJub3Rhcml6YXRpb25UeXBlIjoiQ2VydGlmaWVkIENvcHkiLCJub3RhcnlJbmZvIjoiZXhhbXBsZS1ub3RhcnktaW5mbyIsInBlbSI6ImV4YW1wbGUtcGVtIn19fSwiaXNzIjoiZGlkOmV0aHI6MHgyYTZGMUQ1MDgzZmIxOWI5ZjJDNjUzQjU5OGFiQ2I1NzA1ZUQwNDM5In0.vB-U9fgyp9JBYr8ycxmuVKIEc3ZYeZqKfreda3pXMFcQH1gG7jOgqJVqVH_omIw74N5LO_LQBWKBUYvAi5j3GQA\"\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    // this.buildPermissionTable();\r\n\r\n    const resolver = new Resolver(getResolver(providerConfig));\r\n    console.log(resolver);\r\n    this.setState({ resolver: resolver });\r\n  };\r\n\r\n  jwtChange = e => {\r\n    this.setState({ jwt: e.target.value });\r\n  };\r\n\r\n  verifyJWTClicked = async () => {\r\n    let verifiedVC;\r\n    try {\r\n      verifiedVC = await verifyCredential(this.state.jwt, this.state.resolver);\r\n    } catch (e) {\r\n      console.log(e);\r\n      this.setState({ error: e.message });\r\n      return;\r\n    }\r\n\r\n    console.log(verifiedVC);\r\n\r\n    if (\r\n      verifiedVC.signer.id\r\n        .toLowerCase()\r\n        .includes(this.state.verifiedSigner.toLowerCase())\r\n    ) {\r\n      this.setState({ signerMatches: true });\r\n    }\r\n    this.setState({ verifiedVC: verifiedVC });\r\n    this.setState({ error: undefined });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <MDBContainer style={{ paddingTop: \"100px\" }}>\r\n        <h1>Verify JWT</h1>\r\n        {this.state.error && JSON.stringify(this.state.error)}\r\n\r\n        <MDBInput\r\n          style={{ paddingTop: \"50px\" }}\r\n          onChange={this.jwtChange}\r\n          type=\"textarea\"\r\n          label=\"Paste Your JWT Here\"\r\n          rows=\"8\"\r\n        />\r\n\r\n        <MDBBtn onClick={this.verifyJWTClicked}>Verify</MDBBtn>\r\n\r\n        <MDBRow style={{ textAlign: \"center\" }}>\r\n          <MDBCol>\r\n            {this.state.signerMatches && (\r\n              <MDBIcon style={{ paddingTop: \"50px\" }} size=\"5x\" icon=\"check\" />\r\n            )}\r\n          </MDBCol>\r\n          <MDBCol>\r\n            <h3>Verified Signer</h3>\r\n            <img\r\n              style={{ margin: \"47px\", width: \"45px\" }}\r\n              class=\"circular--square\"\r\n              src=\"newimages/caseworkerlower.png\"\r\n            />\r\n            {this.state.verifiedVC && this.state.verifiedSigner}\r\n          </MDBCol>\r\n          <MDBCol>\r\n            <h3 style={{ paddingTop: \"100px\" }}>VS</h3>\r\n          </MDBCol>\r\n          <MDBCol>\r\n            <h3>Signer From JWT</h3>\r\n            <img\r\n              style={{ margin: \"47px\", width: \"45px\" }}\r\n              class=\"circular--square\"\r\n              src=\"newimages/question.jpg\"\r\n            />\r\n            {this.state.verifiedVC && this.state.verifiedVC.signer.id}\r\n          </MDBCol>\r\n        </MDBRow>\r\n\r\n        <h3 style={{ paddingTop: \"50px\" }}>Subject</h3>\r\n        {this.state.verifiedVC && this.state.verifiedVC.payload.sub}\r\n\r\n        <h3 style={{ paddingTop: \"50px\" }}>Issuer</h3>\r\n        {this.state.verifiedVC && this.state.verifiedVC.issuer}\r\n\r\n        <h3 style={{ paddingTop: \"50px\" }}>Signer</h3>\r\n        {this.state.verifiedVC && this.state.verifiedVC.signer.id}\r\n\r\n        <h3 style={{ paddingTop: \"50px\" }}>Full JWT Decoded:</h3>\r\n        {this.state.verifiedVC && JSON.stringify(this.state.verifiedVC)}\r\n      </MDBContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Verify;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport \"./css/mypass-webflow.css\";\r\nimport \"./css/normalize.css\";\r\nimport \"./css/webflow.css\";\r\nimport OwnerWorkflow from \"./components/ownerWorkflow\";\r\nimport Admin from \"./components/admin\";\r\n\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\n\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\nimport CaseWorkerWorkflow from \"./components/caseworkerWorkflow\";\r\nimport ChooseWorkflow from \"./components/chooseWorkflow\";\r\nimport Verify from \"./components/verify\";\r\n\r\nconst URL_BASE = \"http://34.212.27.73:5000\";\r\n// const URL_BASE = \"http://localhost:5000\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Switch>\r\n          <Route path=\"/verify\">\r\n            <Verify />\r\n          </Route>\r\n          <Route path=\"/admin\">\r\n            <Admin />\r\n          </Route>\r\n          <Route path=\"/owner\">\r\n            <OwnerWorkflow urlBase={URL_BASE} />\r\n          </Route>\r\n          <Route path=\"/caseworker\">\r\n            <CaseWorkerWorkflow urlBase={URL_BASE} />\r\n          </Route>\r\n          <Route\r\n            path=\"/\"\r\n            render={routeProps => <ChooseWorkflow {...routeProps} />}\r\n          />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}